<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>围城个人博客</title>
  
  <subtitle>人丑就要多读书</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-23T12:50:12.123Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>围城</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How To Rebuild Hexo</title>
    <link href="http://yoursite.com/2017/09/22/How-To-Rebuild-Hexo/"/>
    <id>http://yoursite.com/2017/09/22/How-To-Rebuild-Hexo/</id>
    <published>2017-09-22T15:47:12.000Z</published>
    <updated>2017-09-23T12:50:12.123Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>Copy files and directories below to new device:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">- _config.yml</div><div class="line">- package.json</div><div class="line">- scaffolds/</div><div class="line">- source/</div><div class="line">- themes/</div></pre></td></tr></table></figure></p><p>Create a directory named hexo to store them and the instructs followed run under this path(~/hexo/) unless otherwise stated . </p><h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>Install Node.js(recommend node-v4.4.1-x64.msi, using other versions may meet different problems)</p><h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>Install hexo:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure></p><p>If you wait for a long time and there isn’t any progress. Please execute the instructs below:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm config set registry http://registry.cnpmjs.org</div><div class="line">npm info underscore   -- to see whether the first instruct executed successly</div><div class="line">npm --registry http://registry.cnpmjs.org info underscore</div></pre></td></tr></table></figure></p><h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>Install dependencies:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-generator-feed --save</div><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure></p><h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>Login in git account:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;your git account&quot;</div><div class="line">git config --global user.email &quot;the email you used when you registered git account&quot;</div></pre></td></tr></table></figure></p><h2 id="Step-6"><a href="#Step-6" class="headerlink" title="Step 6"></a>Step 6</h2><p>Backup “themes/next/“. Clone the theme(here use next as example):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p><p>Delete all files and directories under “themes/next/“ besides “.github”. Restore “themes/next/“ you backup before and execute the instructs below(under ~/hexo/themes/next/):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git add -A</div><div class="line">git commit</div></pre></td></tr></table></figure></p><h2 id="Step-7"><a href="#Step-7" class="headerlink" title="Step 7"></a>Step 7</h2><p>Generate and deploy:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure></p><h2 id="Other-Instructions"><a href="#Other-Instructions" class="headerlink" title="Other Instructions"></a>Other Instructions</h2><ol><li><p>I execute setp 7 after step 4 and system prompt:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">INFO  Deploying: git</div><div class="line">INFO  Setting up Git deployment...</div><div class="line">Initialized empty Git repository in C:/hexo/.deploy_git/.git/</div><div class="line"></div><div class="line">*** Please tell me who you are.</div><div class="line"></div><div class="line">Run</div><div class="line"></div><div class="line">  git config --global user.email &quot;you@example.com&quot;</div><div class="line">  git config --global user.name &quot;Your Name&quot;</div><div class="line">  ...</div></pre></td></tr></table></figure></li><li><p>Your blog may be whole white without step 6.</p></li><li><p>Clean Cache:<br>delete directory “~/hexo/.deploy_git/“<br>execute:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo clean</div></pre></td></tr></table></figure></li><li><p>The progress info may stuck in half way. You probably don’t believe it that it’s caused to the slow internet. (说起来你可能不相信，这全赖网速慢)</p></li><li><p>I try to add “~/hexo/public/“ to git and interrupt in half way and I don’t know the effect.</p></li><li><p>My blog lack some modules at one time and don’t lack any modules suddenly.</p><center><br><img src="http://img.blog.csdn.net/20170923190735444?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="pic"><br></center></li></ol><h2 id="Some-Tips"><a href="#Some-Tips" class="headerlink" title="Some Tips"></a>Some Tips</h2><ol><li><p>Add Portrait<br>Revise the attribution of avatar in “~/hexo/themes/next/_config.yml”:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">avatar: /uploads/avatar.png</div><div class="line">or</div><div class="line">avatar: http://...</div></pre></td></tr></table></figure></li><li><p>Add Friend Link<br>Add these codes at the tail of “~/hexo/themes/next/_config.yml”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Blogrolls</div><div class="line">links_title: 友情链接</div><div class="line">#links_layout: block</div><div class="line">#links_layout: inline</div><div class="line">links:</div><div class="line">  围城: blog.callouweicheng.cn</div></pre></td></tr></table></figure></li><li><p>remove the useless label at the bottom of blog<br>revise “~/hexo/themes/next/layout/_partials/footer.swig”. The final result:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;copyright&quot; &gt;</div><div class="line">  &#123;% set current = date(Date.now(), &quot;YYYY&quot;) %&#125;</div><div class="line">  &amp;copy; &#123;% if theme.since and theme.since != current %&#125; &#123;&#123; theme.since &#125;&#125; - &#123;% endif %&#125;</div><div class="line">  &lt;span itemprop=&quot;copyrightYear&quot;&gt;&#123;&#123; current &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;span class=&quot;with-love&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-heart&quot;&gt;&lt;/i&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">  &lt;span class=&quot;author&quot; itemprop=&quot;copyrightHolder&quot;&gt;&#123;&#123; config.author &#125;&#125;&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&#123;% block footer %&#125;&#123;% endblock %&#125;</div></pre></td></tr></table></figure></li></ol><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="http://blog.csdn.net/eternity1118_/article/details/71194395?ref=myread" target="_blank" rel="external">hexo：更换电脑，如何继续写博客</a></li><li><a href="http://www.jianshu.com/p/cce30447fc35" target="_blank" rel="external">npm 安装 hexo 卡住问题解决</a></li><li><a href="http://blog.csdn.net/yeweiouyang/article/details/43372513" target="_blank" rel="external">Git未初始化导致的错误提示</a></li><li><a href="http://www.jianshu.com/p/469e985288b3?from=jiantop.com" target="_blank" rel="external">GITHUB+HEXO博客轻松更换主题外观</a></li><li><a href="http://www.jianshu.com/p/5d5931289c09" target="_blank" rel="external">Next主题(Hexo)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Step-1&quot;&gt;&lt;a href=&quot;#Step-1&quot; class=&quot;headerlink&quot; title=&quot;Step 1&quot;&gt;&lt;/a&gt;Step 1&lt;/h2&gt;&lt;p&gt;Copy files and directories below to new device:&lt;br&gt;&lt;fi
      
    
    </summary>
    
      <category term="Notes" scheme="http://yoursite.com/categories/Notes/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04 配置apache php mysql 的各种坑</title>
    <link href="http://yoursite.com/2017/09/19/Ubuntu16.04-%E9%85%8D%E7%BD%AEapache-php-mysql-%E7%9A%84%E5%90%84%E7%A7%8D%E5%9D%91/"/>
    <id>http://yoursite.com/2017/09/19/Ubuntu16.04-配置apache-php-mysql-的各种坑/</id>
    <published>2017-09-19T14:57:15.000Z</published>
    <updated>2017-09-23T04:24:34.619Z</updated>
    
    <content type="html"><![CDATA[<p>先说几句：</p><ol><li>如果可以换centos吧，Ubuntu下安装这些的路径，配置文件名称都和其他linxu系统不一致，很难找</li><li>Ubuntu只提供PHP7</li><li>请不要安装PHP7</li><li>请不要安装PHP7</li><li>请不要安装PHP7</li><li>如果读者非要安装PHP7，请退出笔者的博客吧</li></ol><h2 id="Apache2"><a href="#Apache2" class="headerlink" title="Apache2"></a>Apache2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install apache2</div></pre></td></tr></table></figure><p>这个没什么好说的，配置文件在/etc/apache2/apache2.conf下，配置文件不需要修改外网可以访问，可以用localhost和IP访问试试。apache默认位置在/var/www/html/下。apache的重启命令为（印象中是这个，如果错了网上百度一下吧，并请给笔者留个言，谢谢）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/apache2 restart</div></pre></td></tr></table></figure></p><p>请记住服务器80端口一定要打开！服务器80端口一定要打开！服务器80端口一定要打开！</p><h2 id="PHP5-6"><a href="#PHP5-6" class="headerlink" title="PHP5.6"></a>PHP5.6</h2><p>请不要装PHP7，因为安装PHP7之后会遇到各种坑，反正笔者是没有能全部填上，如果有兴趣读者可以去填着试试，如果成功了请给笔者留言，谢谢。如果已经安装了PHP7请先卸载：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo dpkg -l | grep php| awk &apos;&#123;print $2&#125;&apos; |tr &quot;\n&quot; &quot; &quot;</div><div class="line">sudo apt-get install aptitude</div><div class="line">sudo aptitude purge `dpkg -l | grep php| awk &apos;&#123;print $2&#125;&apos; |tr &quot;\n&quot; &quot; &quot;`</div></pre></td></tr></table></figure></p><p>卸载后添加 PPA：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo add-apt-repository ppa:ondrej/php</div></pre></td></tr></table></figure></p><p>执行安装命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install php5.6</div></pre></td></tr></table></figure></p><p>中途遇到什么选择，要么Y、要么确认、要么OK。之后安装扩展：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install php5.6-gd</div><div class="line">sudo apt-get install php5.6-mysql</div></pre></td></tr></table></figure></p><p>重启apache后可以在apache路径下新建phpinfo.php：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">echo phpinfo();</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>打开浏览器输入localhost/phpinfo.php就能看到是否安装成功。php配置路径一般在/etc/php/5.6/apache2/php.ini，保险去查看phpinfo页面的信息。</p><h2 id="MySQL5-6"><a href="#MySQL5-6" class="headerlink" title="MySQL5.6"></a>MySQL5.6</h2><p>记住安装MySQL时一定要设置密码，一定要设置密码，一定要设置密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install mysql-server php5.6-mysql    root root0x0</div></pre></td></tr></table></figure></p><p>如果忘记了怎么办，反正网上的修改方法笔者没有尝试成功，读者可以去试，笔者的方法是新添加一个用户。去/etc/mysql/debian.cnf查找默认用户[user]及[password]：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u user -p</div></pre></td></tr></table></figure></p><p>输入密码后创建新用户、设置密码并授权：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CREATE USER &apos;newuser&apos;@&apos;host&apos; IDENTIFIED BY &apos;newpassword&apos;; </div><div class="line">GRANT privileges ON databasename.tablename TO &apos;newuser&apos;@&apos;host&apos; ;</div></pre></td></tr></table></figure></p><p>这里还有步操作不知道有没有用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">USE user;</div><div class="line">UPDATE user SET host=&apos;%&apos; where user=&apos;newuser&apos;;</div></pre></td></tr></table></figure></p><p>exit退出后重启MySQL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mysql restart</div></pre></td></tr></table></figure></p><p>如果还不行的话就试试网上说的safe_mysqld，添加skip-name-resolve等方法吧</p><p>请记住服务器3306端口一定要打开！服务器3306端口一定要打开！服务器3306端口一定要打开！</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>windows下安装可以直接下载LAMP，WAMP，XAMPP都可以</p><p>上传文件大小限制修改php.ini的upload_max_file，并且上传文件要把项目赋予777权限（什么是777上网百度吧）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod -R 777 projectDir</div></pre></td></tr></table></figure></p><p>不到万不得已不要重装MySQL</p><p>window下python的MySQLdb笔者没有找到pip或者esay_install的办法，VC++9.0的环境笔者也差不多有了，最后是<a href="http://www.codegood.com/archives/129" target="blank">网上下载</a>直接安装的，安装后在脚本里import就可以了。</p><p>Linxu下安装python的MySQLdb：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libmysqlclient-dev</div><div class="line">sudo apt-get install python-dev</div><div class="line">sudo pip install mysql-python</div></pre></td></tr></table></figure></p><p>希望这篇文章能帮大家填完所有的坑</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先说几句：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果可以换centos吧，Ubuntu下安装这些的路径，配置文件名称都和其他linxu系统不一致，很难找&lt;/li&gt;
&lt;li&gt;Ubuntu只提供PHP7&lt;/li&gt;
&lt;li&gt;请不要安装PHP7&lt;/li&gt;
&lt;li&gt;请不要安装PHP7&lt;/li&gt;
      
    
    </summary>
    
      <category term="Notes" scheme="http://yoursite.com/categories/Notes/"/>
    
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Anomaly Detection：Isolation Forest</title>
    <link href="http://yoursite.com/2017/08/03/Anomaly-Detection%EF%BC%9AIsolation-Forest/"/>
    <id>http://yoursite.com/2017/08/03/Anomaly-Detection：Isolation-Forest/</id>
    <published>2017-08-03T14:51:11.000Z</published>
    <updated>2017-09-23T01:02:37.643Z</updated>
    
    <content type="html"><![CDATA[<p>IForest algorithm is proposed by Dr. Liu (Fei Tony Liu), while studying at Monash University, derected by Prof. Chen (Kai-Ming Ting) and Prof. Zhou  (Zhi-Hua Zhou). The first version, published in ICDM in 2008, won the annual best paper. In industry, IForest is a practical, effective, time efficient algorithm, and can deal with high-dimensional data and mass data effectively. Here is a brief summary of IForest.</p><h2 id="ITree"><a href="#ITree" class="headerlink" title="ITree"></a>ITree</h2><p>When it comes to forest, we must pay attention to tree.So, before talking something about Isolation Forest (IForest), we should understand how to establish a Isolation Tree (ITree). ITree is a kind of random two binary tree, whose each node either has two childs or no child (leaf node). Given a set of data D, assumping all attributes of D here are continuous variables, ITree is established as follows:</p><ul><li>Select an attribute Attr randomly;</li><li>Select a value X of Attr randomly;</li><li>Classify D according to Attr, and place the record of Attr less than X at the left child, and place the record of Attr more than or qual to X is at the right child;</li></ul><p>Then construct the left chikd and the right child recursively until the following conditions are met:</p><ul><li>Input data sets have only one record or multiple same records;</li><li>The height of the tree has reached the limit height;</li></ul><center><br><img src="http://img.blog.csdn.net/20170915021439249?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ITree"><br></center><p>When ITree is established, we can predict the data. The process of prediction is to walk the test record on the ITree to see which leaf node the test record falls on. ITree can detect the abnormal data assumption that abnormal nodes are generally very rare in ITree that will soon be divided into leaf nodes. So we can use the length of path H(x) from the leaf node to the root node to determine whether a record is abnormal. For a data set containing n datum, the minium height of the tree is log(n), the maximum height is n-1. However, using log(n) and N-1 to normalize cannot guarantee convenient comparison and limited bound. Here is a slightly complex normalization formula:</p><center><br><p><br><img src="http://img.blog.csdn.net/20170915021540713?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="130" height="35" alt="formula1" align="center"><br></p><br><p><br><img src="http://img.blog.csdn.net/20170920104043416?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="250" height="35" alt="formula2" align="center"><br></p><br></center><p>S(x, n) is the abnormal index of record X in the Itree composed by training  n sample data. S(x, n) ranges from [0, 1], the more closer to 1 the more possibility of abnormal point, and the more closer to 0 the more possibility of normal point.The greek letter represents euler’s constant. If most S(x, n) of the training samples are close to 0.5, the data set is indicated to have no obvious abnormal value.<br>However, random selection of attributes, random selection of attribute values, a ITree is absolutely not reliable, but the combination of a number of ITrees will become powerful and trustworthy.</p><h2 id="IForest"><a href="#IForest" class="headerlink" title="IForest"></a>IForest</h2><p>Then， let’s talk about how to establish a IForest with given data set D containing N records. Methods to establish IForest are similar to Random Forest’s counterpart, using part of sampling data set to establish every tree intending to ensure the difference between trees. But the size of sampling data of IForest needn’t to be equal to N and can be far less than N. Actually, there will be little promotion of effect if the sampling size of data bigger than 256. And it will cause a waste of computation time. Why IForest performs worse with more data？ We can get the answer in the two following maps：</p><center><br><img src="http://img.blog.csdn.net/20170915021648475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IForest1"><br><img src="http://img.blog.csdn.net/20170915021711334?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IForest2"><br></center><p>The left map is the result of training with all data set and the right map is the result of using only sampling data. Blue represents normal sample and red represents abnormal sample. It is obvious that normal samples and abnormal samples overlap together before sampling and it is very difficult to separate them. But after sampling, the normal samples and the abnormal samples can be separated clearly.</p><p>Besides limit the sampling size, we need to set the maximum height to each ITree (l=ceiling (log2 M), M is the number of ITree). Considering the abnormal sample is few, the length of abnormal sample’s path is relatively short and we just need to distinguish normal and abnormal records, we can only pay attention to the part below the average height of ITree. In this way, the algorithm is more efficient. Howerer, we need to improve the calculation of the height h(x) after the adjustment. Reader can see the improvement behind. Now, let’s take a look at the pseudo code of IForest firstly:</p><center><br><img src="http://img.blog.csdn.net/20170915021755280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IForest3"><br></center><p>After the IForest is established, it’s necessary to integrate the results of each ITree when predicting the tests set:</p><center><br><p><br><img src="http://img.blog.csdn.net/20170915021842884?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="140" height="35" alt="formula3" align="center"><br></p><br></center><p>E(H(x)) represents the average height of record X in each ITree. In addition, the calculation of h(x) needs to be improved. While generating leaf nodes, the algorithm records the number Y of records the leaf node containing and we can estimate the average height with Y. h(x) can be calculated as follows:</p><center><br><img src="http://img.blog.csdn.net/20170915021857813?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IForest4"><br></center><h2 id="Processing-High-Dimensional-Data"><a href="#Processing-High-Dimensional-Data" class="headerlink" title="Processing High-Dimensional Data"></a>Processing High-Dimensional Data</h2><p>While processing high-dimensional data, we should improve the algorithm. Howerer we needn’t to use all of the attributes of the samples, we can take the advantage of the coefficient of kurtosis to pick out some valuable attributes. Then, we establish the ITree like a random forest, established with random records and random attributes.</p><h2 id="Other-Instructions"><a href="#Other-Instructions" class="headerlink" title="Other Instructions"></a>Other Instructions</h2><p>This algorithm is essentially an unsupervised learning, which needn’t label the data previously. Sometimes, abnormal data is too rare, even can only attain several abnormal samples, to process training. The paper mentions that the construction of IForest is feasible by using normal samples only. However, the effect is reduced, the algorithm has good performance, and could be improved by adjusting the size of sample.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;IForest algorithm is proposed by Dr. Liu (Fei Tony Liu), while studying at Monash University, derected by Prof. Chen (Kai-Ming Ting) and 
      
    
    </summary>
    
      <category term="Machine Learning" scheme="http://yoursite.com/categories/Machine-Learning/"/>
    
    
      <category term="Unsupervised Learning" scheme="http://yoursite.com/tags/Unsupervised-Learning/"/>
    
  </entry>
  
  <entry>
    <title>毕设 视觉显著性目标检测算法研究与实现</title>
    <link href="http://yoursite.com/2017/07/01/%E6%AF%95%E8%AE%BE-%E8%A7%86%E8%A7%89%E6%98%BE%E8%91%97%E6%80%A7%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2017/07/01/毕设-视觉显著性目标检测算法研究与实现/</id>
    <published>2017-07-01T13:12:34.000Z</published>
    <updated>2017-09-22T04:44:45.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>由于作者比较懒，所以全是截图，可能有些图片放大就失真了，但是一张一张截并且尽可能保持大小一样和较好的清晰度也非常困难，所以请见谅</p><h2 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h2><p><img src="http://img.blog.csdn.net/20170914133140058?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="cover"><br><img src="http://img.blog.csdn.net/20170914133247162?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="I"><br><img src="http://img.blog.csdn.net/20170914133319712?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="II"><br><img src="http://img.blog.csdn.net/20170914133348409?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="III"><br><img src="http://img.blog.csdn.net/20170914133408377?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IV"><br><img src="http://img.blog.csdn.net/20170914133436234?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page01"><br><img src="http://img.blog.csdn.net/20170914120205023?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page02"><br><img src="http://img.blog.csdn.net/20170914133602304?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page03"><br><img src="http://img.blog.csdn.net/20170914133646601?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page04"><br><img src="http://img.blog.csdn.net/20170914133711770?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page05"><br><img src="http://img.blog.csdn.net/20170914133829785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page06"><br><img src="http://img.blog.csdn.net/20170914133859657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page07"><br><img src="http://img.blog.csdn.net/20170914134011530?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page08"><br><img src="http://img.blog.csdn.net/20170914134022666?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page09"><br><img src="http://img.blog.csdn.net/20170914134033146?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page10"><br><img src="http://img.blog.csdn.net/20170914134110600?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page11"><br><img src="http://img.blog.csdn.net/20170914134120616?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page12"><br><img src="http://img.blog.csdn.net/20170914134132386?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page13"><br><img src="http://img.blog.csdn.net/20170914134148150?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page14"><br><img src="http://img.blog.csdn.net/20170914134203268?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page15"><br><img src="http://img.blog.csdn.net/20170914134638278?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page16"><br><img src="http://img.blog.csdn.net/20170914134652927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page17"><br><img src="http://img.blog.csdn.net/20170914134704532?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page18"><br><img src="http://img.blog.csdn.net/20170914134715230?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page19"><br><img src="http://img.blog.csdn.net/20170914134727009?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page20"><br><img src="http://img.blog.csdn.net/20170914134755955?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page21"><br><img src="http://img.blog.csdn.net/20170914134817556?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page22"><br><img src="http://img.blog.csdn.net/20170914134829336?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page23"><br><img src="http://img.blog.csdn.net/20170914134841943?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page24"><br><img src="http://img.blog.csdn.net/20170914134855286?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page25"><br><img src="http://img.blog.csdn.net/20170914134913492?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page26"><br><img src="http://img.blog.csdn.net/20170914135002457?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page27"><br><img src="http://img.blog.csdn.net/20170914135014727?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page28"><br><img src="http://img.blog.csdn.net/20170914135028037?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page29"><br><img src="http://img.blog.csdn.net/20170914135041141?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page30"><br><img src="http://img.blog.csdn.net/20170914135122056?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page31"><br><img src="http://img.blog.csdn.net/20170921222221521?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="page32"><br><img src="http://img.blog.csdn.net/20170921221417826?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="check1"><br><img src="http://img.blog.csdn.net/20170914135314699?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="check2"><br><img src="http://img.blog.csdn.net/20170914135329308?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="check3"></p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>非常感谢您的阅读</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;由于作者比较懒，所以全是截图，可能有些图片放大就失真了，但是一张一张截并且尽可能保持大小一样和较好的清晰度也非常困难，所以请见谅&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Paper" scheme="http://yoursite.com/categories/Paper/"/>
    
    
      <category term="C &amp; C++" scheme="http://yoursite.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Fast Fourier Transform And It&#39;s Inverse Transform</title>
    <link href="http://yoursite.com/2017/05/12/Fast-Fourier-Transform-And-It&#39;s-Inverse-Transform/"/>
    <id>http://yoursite.com/2017/05/12/Fast-Fourier-Transform-And-It&#39;s-Inverse-Transform/</id>
    <published>2017-05-12T06:37:15.000Z</published>
    <updated>2017-09-24T06:03:19.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FFT"><a href="#FFT" class="headerlink" title="FFT"></a>FFT</h2><p>The Formulas are too complex and the author is too lazy. Please read the references below instead:</p><ul><li><a href="https://en.wikipedia.org/wiki/Fast_Fourier_transform" target="_blank" rel="external">Wikipedia: Fast Fourier Transform</a></li><li><a href="https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/214957?fr=aladdin" target="_blank" rel="external">Fast Fourier Transform</a></li><li><a href="http://www.cnblogs.com/Lyush/articles/3219196.html" target="_blank" rel="external">The Principle and Formula of Fast Fourier Transform (FFT)</a></li></ul><h2 id="2D-FFT-Code"><a href="#2D-FFT-Code" class="headerlink" title="2D-FFT Code"></a>2D-FFT Code</h2><p>Function FFT is fast fourier transform.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div></pre></td><td class="code"><pre><div class="line">// Author: 围城</div><div class="line">typedef struct complex</div><div class="line">&#123;  </div><div class="line">ElementType real;  </div><div class="line">ElementType imagin;</div><div class="line">&#125; COMPLEX;</div><div class="line"></div><div class="line">void AddComplex(COMPLEX *src1, COMPLEX *src2, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">dst-&gt;imagin = src1-&gt;imagin+src2-&gt;imagin;</div><div class="line">dst-&gt;real   = src1-&gt;real+src2-&gt;real;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void SubComplex(COMPLEX *src1, COMPLEX *src2, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">dst-&gt;imagin = src1-&gt;imagin-src2-&gt;imagin;</div><div class="line">dst-&gt;real   = src1-&gt;real-src2-&gt;real;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void MultyComplex(COMPLEX *src1, COMPLEX *src2, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">ElementType r1,r2;</div><div class="line">ElementType i1,i2;</div><div class="line">r1=src1-&gt;real;</div><div class="line">r2=src2-&gt;real;</div><div class="line">i1=src1-&gt;imagin;</div><div class="line">i2=src2-&gt;imagin;</div><div class="line">// dst-&gt;imagin = src1-&gt;real * src2-&gt;imagin + src2-&gt;real   * src1-&gt;imagin;</div><div class="line">// dst-&gt;real   = src1-&gt;real * src2-&gt;real   - src1-&gt;imagin * src2-&gt;imagin;</div><div class="line">dst-&gt;imagin=r1*i2+r2*i1;</div><div class="line">dst-&gt;real=r1*r2-i1*i2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void CopyComplex(COMPLEX *src, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">dst-&gt;real   = src-&gt;real;</div><div class="line">dst-&gt;imagin = src-&gt;imagin;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void getWN(Int n, Int fftSize, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">ElementType x = 2.0 * Pi * (ElementType)n / (ElementType)fftSize;</div><div class="line">dst-&gt;imagin = -sin(x);</div><div class="line">dst-&gt;real   = cos(x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int isBase2(int size)</div><div class="line">&#123;</div><div class="line">int k = size;</div><div class="line">int z = 0;</div><div class="line">while (k /= 2) &#123;</div><div class="line">z++;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (size != (1&lt;&lt;z)) &#123;</div><div class="line">return  -1;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">return z;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fftRemap(COMPLEX *src,int size)</div><div class="line">&#123;</div><div class="line">if (1 == size) &#123;</div><div class="line">return;</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *temp = (COMPLEX*)malloc(sizeof(COMPLEX)*size);</div><div class="line">for (int i = 0;i &lt; size;i++)</div><div class="line">&#123;</div><div class="line">if(!(i%2)) &#123;</div><div class="line">CopyComplex(src+i, temp+i/2);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">CopyComplex(src+i, temp+(size+i)/2);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++) &#123;</div><div class="line">CopyComplex(temp+i, src+i);</div><div class="line">&#125;</div><div class="line"></div><div class="line">free(temp);</div><div class="line">fftRemap(src, size/2);</div><div class="line">fftRemap(src+size/2, size/2);</div><div class="line">return;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void RealFFT(ElementType *src, COMPLEX *dst, int size)</div><div class="line">&#123;</div><div class="line">int k = size;</div><div class="line">int z = 0;</div><div class="line"></div><div class="line">while (k /= 2) &#123;</div><div class="line">z++;</div><div class="line">&#125;</div><div class="line">k = z;</div><div class="line"></div><div class="line">if (size != (1&lt;&lt;k)) &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *srcCpy = (COMPLEX*)malloc(sizeof(COMPLEX)*size);</div><div class="line">if (NULL == srcCpy) &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++)</div><div class="line">&#123;</div><div class="line">(srcCpy+i)-&gt;real   = *(src+i);</div><div class="line">(srcCpy+i)-&gt;imagin = 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">fftRemap(srcCpy, size);</div><div class="line">for (int i = 0;i &lt; k;i++)</div><div class="line">&#123;</div><div class="line">z = 0;</div><div class="line">for (int j = 0;j &lt; size;j++)</div><div class="line">&#123;</div><div class="line">if (1 == (j/(1&lt;&lt;i))%2)</div><div class="line">&#123;</div><div class="line">COMPLEX wn;</div><div class="line">getWN(z, size, &amp;wn);</div><div class="line"></div><div class="line">z += 1 &lt;&lt; (k-i-1);</div><div class="line">int neighbour = j - (1&lt;&lt;i);</div><div class="line"></div><div class="line">COMPLEX temp;</div><div class="line">temp.real   = (srcCpy+neighbour)-&gt;real;</div><div class="line">temp.imagin = (srcCpy+neighbour)-&gt;imagin;</div><div class="line"></div><div class="line">MultyComplex(srcCpy+j, &amp;wn, srcCpy+j);</div><div class="line">AddComplex(&amp;temp, srcCpy+j, srcCpy+neighbour);</div><div class="line">SubComplex(&amp;temp, srcCpy+j, srcCpy+j);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">z = 0;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++) &#123;</div><div class="line">CopyComplex(srcCpy+i, dst+i);</div><div class="line">&#125;</div><div class="line"></div><div class="line">free(srcCpy);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void ColumnVector(COMPLEX *src, COMPLEX *dst, int fftWidthSize, int fftHeightSize)</div><div class="line">&#123;</div><div class="line">for (int row = 0;row &lt; fftHeightSize;row++) &#123;</div><div class="line">CopyComplex(src+fftWidthSize*row, dst+row);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void FFT(COMPLEX *src, COMPLEX *dst, int size)</div><div class="line">&#123;</div><div class="line">int k = size;</div><div class="line">int z = 0;</div><div class="line"></div><div class="line">while (k /= 2) &#123;</div><div class="line">z++;</div><div class="line">&#125;</div><div class="line">k = z;</div><div class="line"></div><div class="line">if (size != (1&lt;&lt;k)) &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *srcCpy=(COMPLEX*)malloc(sizeof(COMPLEX)*size);</div><div class="line">if (NULL == srcCpy) &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++) &#123;</div><div class="line">CopyComplex(src+i, srcCpy+i);</div><div class="line">&#125;</div><div class="line"></div><div class="line">fftRemap(srcCpy, size);</div><div class="line">for (int i = 0;i &lt; k;i++)</div><div class="line">&#123;</div><div class="line">z = 0;</div><div class="line">for (int j = 0;j &lt; size;j++)</div><div class="line">&#123;</div><div class="line">if (1 == (j/(1&lt;&lt;i))%2)</div><div class="line">&#123;</div><div class="line">COMPLEX wn;</div><div class="line">getWN(z, size, &amp;wn);</div><div class="line"></div><div class="line">z += 1 &lt;&lt; (k-i-1);</div><div class="line">int neighbour = j - (1&lt;&lt;i);</div><div class="line"></div><div class="line">COMPLEX temp;</div><div class="line">temp.real   = (srcCpy+neighbour)-&gt;real;</div><div class="line">temp.imagin = (srcCpy+neighbour)-&gt;imagin;</div><div class="line"></div><div class="line">MultyComplex(srcCpy+j, &amp;wn,srcCpy+j);</div><div class="line">AddComplex(&amp;temp, srcCpy+j, srcCpy+neighbour);</div><div class="line">SubComplex(&amp;temp, srcCpy+j, srcCpy+j);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">z = 0;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++) &#123;</div><div class="line">CopyComplex(srcCpy+i, dst+i);</div><div class="line">&#125;</div><div class="line"></div><div class="line">free(srcCpy);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void IColumnVector(COMPLEX *src, COMPLEX *dst, int fftWidthSize, int fftHeightSize)</div><div class="line">&#123;</div><div class="line">for (int row = 0;row &lt; fftHeightSize;row++) &#123;</div><div class="line">CopyComplex(src+row, dst+fftWidthSize*row);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int FFT2D(ElementType *src, COMPLEX *dst, int fftWidthSize, int fftHeightSize)</div><div class="line">&#123;</div><div class="line">if (-1 == isBase2(fftWidthSize) || -1 == isBase2(fftHeightSize)) &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *row = (COMPLEX*)malloc(sizeof(COMPLEX)*fftHeightSize*fftWidthSize);</div><div class="line">if (NULL == row) &#123;</div><div class="line">return -1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; fftHeightSize;i++) &#123;</div><div class="line">RealFFT(src+fftWidthSize*i, row+fftWidthSize*i, fftWidthSize);</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *column = (COMPLEX*)malloc(sizeof(COMPLEX)*fftHeightSize);</div><div class="line">if (NULL == column) &#123;</div><div class="line">return -1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; fftWidthSize;i++)</div><div class="line">&#123;</div><div class="line">ColumnVector(row+i, column, fftWidthSize, fftHeightSize);</div><div class="line">FFT(column, column, fftHeightSize);</div><div class="line">IColumnVector(column, row+i, fftWidthSize, fftHeightSize);</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; fftHeightSize*fftWidthSize;i++) &#123;</div><div class="line">CopyComplex(row+i, dst+i);</div><div class="line">&#125;</div><div class="line"></div><div class="line">free(row);</div><div class="line">free(column);</div><div class="line"></div><div class="line">return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="IFFT"><a href="#IFFT" class="headerlink" title="IFFT"></a>IFFT</h2><p>references:</p><ul><li><a href="http://www.cppblog.com/coreBugZJ/archive/2011/11/25/160988.aspx" target="_blank" rel="external">Fast Fourier Transform Base on Gray Scale Image (FFT, IFFT, one-dimension, two-dimension)</a></li><li><a href="https://wenku.baidu.com/view/4fde817c5acfa1c7aa00cc91.html" target="_blank" rel="external">IFFT Inverse Fast Fourier Transform</a></li></ul><p>The source of 2D-IFFT is rare. Readers might understand 2D-IFFT by reading author’s code.</p><h2 id="2D-IFFT-Code"><a href="#2D-IFFT-Code" class="headerlink" title="2D-IFFT Code"></a>2D-IFFT Code</h2><p>Function IFFT is inverse fast fourier transform.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div></pre></td><td class="code"><pre><div class="line">// Author: 围城</div><div class="line">typedef struct complex</div><div class="line">&#123;  </div><div class="line">ElementType real;  </div><div class="line">ElementType imagin;</div><div class="line">&#125; COMPLEX;</div><div class="line"></div><div class="line">void AddComplex(COMPLEX *src1, COMPLEX *src2, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">dst-&gt;imagin = src1-&gt;imagin+src2-&gt;imagin;</div><div class="line">dst-&gt;real   = src1-&gt;real+src2-&gt;real;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void SubComplex(COMPLEX *src1, COMPLEX *src2, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">dst-&gt;imagin = src1-&gt;imagin-src2-&gt;imagin;</div><div class="line">dst-&gt;real   = src1-&gt;real-src2-&gt;real;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void MultyComplex(COMPLEX *src1, COMPLEX *src2, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">ElementType r1,r2;</div><div class="line">ElementType i1,i2;</div><div class="line">r1=src1-&gt;real;</div><div class="line">r2=src2-&gt;real;</div><div class="line">i1=src1-&gt;imagin;</div><div class="line">i2=src2-&gt;imagin;</div><div class="line">// dst-&gt;imagin = src1-&gt;real * src2-&gt;imagin + src2-&gt;real   * src1-&gt;imagin;</div><div class="line">// dst-&gt;real   = src1-&gt;real * src2-&gt;real   - src1-&gt;imagin * src2-&gt;imagin;</div><div class="line">dst-&gt;imagin=r1*i2+r2*i1;</div><div class="line">dst-&gt;real=r1*r2-i1*i2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void CopyComplex(COMPLEX *src, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">dst-&gt;real   = src-&gt;real;</div><div class="line">dst-&gt;imagin = src-&gt;imagin;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void getWN(Int n, Int fftSize, COMPLEX *dst)</div><div class="line">&#123;</div><div class="line">ElementType x = 2.0 * Pi * (ElementType)n / (ElementType)fftSize;</div><div class="line">dst-&gt;imagin = -sin(x);</div><div class="line">dst-&gt;real   = cos(x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int isBase2(int size)</div><div class="line">&#123;</div><div class="line">int k = size;</div><div class="line">int z = 0;</div><div class="line">while (k /= 2) &#123;</div><div class="line">z++;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (size != (1&lt;&lt;z)) &#123;</div><div class="line">return  -1;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">return z;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fftRemap(COMPLEX *src,int size)</div><div class="line">&#123;</div><div class="line">if (1 == size) &#123;</div><div class="line">return;</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *temp = (COMPLEX*)malloc(sizeof(COMPLEX)*size);</div><div class="line">for (int i = 0;i &lt; size;i++)</div><div class="line">&#123;</div><div class="line">if(!(i%2)) &#123;</div><div class="line">CopyComplex(src+i, temp+i/2);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">CopyComplex(src+i, temp+(size+i)/2);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++) &#123;</div><div class="line">CopyComplex(temp+i, src+i);</div><div class="line">&#125;</div><div class="line"></div><div class="line">free(temp);</div><div class="line">fftRemap(src, size/2);</div><div class="line">fftRemap(src+size/2, size/2);</div><div class="line">return;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void ColumnVector(COMPLEX *src, COMPLEX *dst, int fftWidthSize, int fftHeightSize)</div><div class="line">&#123;</div><div class="line">for (int row = 0;row &lt; fftHeightSize;row++) &#123;</div><div class="line">CopyComplex(src+fftWidthSize*row, dst+row);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void IFFT(COMPLEX *src, COMPLEX *dst, int size)</div><div class="line">&#123;</div><div class="line">for (int i = 0;i &lt; size;i++) &#123;</div><div class="line">(src+i)-&gt;imagin = -(src+i)-&gt;imagin;</div><div class="line">&#125;</div><div class="line"></div><div class="line">fftRemap(src, size);</div><div class="line"></div><div class="line">int z, k;</div><div class="line">if (-1 != (z=isBase2(size))) &#123;</div><div class="line">k = isBase2(size);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; k;i++)</div><div class="line">&#123;</div><div class="line">z = 0;</div><div class="line">for (int j = 0;j &lt; size;j++)</div><div class="line">&#123;</div><div class="line">if (1 == (j/(1&lt;&lt;i))%2)</div><div class="line">&#123;</div><div class="line">COMPLEX wn;</div><div class="line">getWN(z, size, &amp;wn);</div><div class="line"></div><div class="line">z += 1 &lt;&lt; (k-i-1);</div><div class="line">int neighbour = j - (1&lt;&lt;i);</div><div class="line"></div><div class="line">COMPLEX temp;</div><div class="line">CopyComplex(src+neighbour, &amp;temp);</div><div class="line"></div><div class="line">MultyComplex(src+j, &amp;wn, src+j);</div><div class="line">AddComplex(&amp;temp, src+j, src+neighbour);</div><div class="line">SubComplex(&amp;temp, src+j, src+j);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">z = 0;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; size;i++)</div><div class="line">&#123;</div><div class="line">(dst+i)-&gt;imagin = (1./size) * (src+i)-&gt;imagin;</div><div class="line">(dst+i)-&gt;real   = (1./size) * (src+i)-&gt;real;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void IColumnVector(COMPLEX *src, COMPLEX *dst, int fftWidthSize, int fftHeightSize)</div><div class="line">&#123;</div><div class="line">for (int row = 0;row &lt; fftHeightSize;row++) &#123;</div><div class="line">CopyComplex(src+row, dst+fftWidthSize*row);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int IFFT2D(COMPLEX *src, COMPLEX *dst, int fftWidthSize, int fftHeightSize)</div><div class="line">&#123;</div><div class="line">if (-1 == isBase2(fftWidthSize) || -1 == isBase2(fftHeightSize)) &#123;</div><div class="line">exit(0);</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *row=(COMPLEX*)malloc(sizeof(COMPLEX)*fftHeightSize*fftWidthSize);</div><div class="line">if (NULL == row) &#123;</div><div class="line">return -1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">COMPLEX *column=(COMPLEX*)malloc(sizeof(COMPLEX)*fftHeightSize);</div><div class="line">if (NULL == column) &#123;</div><div class="line">return -1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for(int i = 0;i &lt; fftWidthSize;i++)</div><div class="line">&#123;</div><div class="line">ColumnVector(src+i, column, fftWidthSize, fftHeightSize);</div><div class="line">IFFT(column, column, fftHeightSize);</div><div class="line">IColumnVector(column, src+i, fftWidthSize, fftHeightSize);</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; fftWidthSize*fftHeightSize;i++) &#123;</div><div class="line">(src+i)-&gt;imagin = -(src+i)-&gt;imagin;</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; fftHeightSize;i++) &#123;</div><div class="line">IFFT(src+fftWidthSize*i, row+fftWidthSize*i, fftWidthSize);</div><div class="line">&#125;</div><div class="line"></div><div class="line">for (int i = 0;i &lt; fftHeightSize*fftWidthSize;i++)</div><div class="line">&#123;</div><div class="line">CopyComplex(row+i, dst+i);</div><div class="line">// *(dst+i) = (row+i)-&gt;real;</div><div class="line">&#125;</div><div class="line"></div><div class="line">free(row);</div><div class="line">free(column);</div><div class="line"></div><div class="line">return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;FFT&quot;&gt;&lt;a href=&quot;#FFT&quot; class=&quot;headerlink&quot; title=&quot;FFT&quot;&gt;&lt;/a&gt;FFT&lt;/h2&gt;&lt;p&gt;The Formulas are too complex and the author is too lazy. Please re
      
    
    </summary>
    
      <category term="Mathematics" scheme="http://yoursite.com/categories/Mathematics/"/>
    
    
      <category term="Graphics" scheme="http://yoursite.com/tags/Graphics/"/>
    
      <category term="Fourier" scheme="http://yoursite.com/tags/Fourier/"/>
    
  </entry>
  
  <entry>
    <title>Inverse Discrete Fourier Transform And Two-Dimensional Inverse Discrete Fourier Transform</title>
    <link href="http://yoursite.com/2017/05/10/Inverse-Discrete-Fourier-Transform-And-Two-Dimensional-Inverse-Discrete-Fourier-Transform/"/>
    <id>http://yoursite.com/2017/05/10/Inverse-Discrete-Fourier-Transform-And-Two-Dimensional-Inverse-Discrete-Fourier-Transform/</id>
    <published>2017-05-10T13:34:11.000Z</published>
    <updated>2017-09-24T06:15:03.581Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IDFT-Formula"><a href="#IDFT-Formula" class="headerlink" title="IDFT Formula"></a>IDFT Formula</h2><center><br><img src="http://img.blog.csdn.net/20170924134343332?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300"><br></center><br>N is the size of the sequence. Fundamental Components W<small>N</small> = e^[-j*(2pi/N)], W<small>N</small>^(-nk) is K subharmonic component.<br>The relation between Euler Formula and Trigonometric Function is:<br><center><br>e^(it) = cos(t)+i·sin(t)<br>e^(-it) = cos(t)-i·sin(t)<br></center><h2 id="IDFT-Code"><a href="#IDFT-Code" class="headerlink" title="IDFT Code"></a>IDFT Code</h2><p>I deleted my IDFT code unconsciously. The code below is downloaded on the Internet. Thanks <a href="http://blog.csdn.net/calcular/article/details/46804779" target="_blank" rel="external">Calcular</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">// Author: Calcular</div><div class="line">struct complex&#123;  </div><div class="line">    double r,i;  </div><div class="line">&#125;;  </div><div class="line"></div><div class="line">complex multi(complex a,complex b)&#123;  </div><div class="line">    complex tmp;  </div><div class="line">    tmp.r=a.r*b.r-a.i*b.i;  </div><div class="line">    tmp.i=a.r*b.i+a.i*b.r;  </div><div class="line">    return tmp;  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">int fi(double in)&#123;  </div><div class="line">    if((in-(int)in)&gt;0.5) return (int)in+1;  </div><div class="line">    else return (int)in;  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">void IDFT(double **in,int *out,const int &amp;n)  </div><div class="line">&#123;  </div><div class="line">    int i,j;  </div><div class="line">    complex **W=new complex*[n];  </div><div class="line">    for(i=0;i&lt;n;i++)&#123;  </div><div class="line">        W[i]=new complex[n];  </div><div class="line">    &#125;  </div><div class="line">    complex *lis=new complex[(n-1)*(n-1)+1];  </div><div class="line">    lis[0].r=1;lis[0].i=0;  </div><div class="line">    lis[1].r=cos(2.0*PI/n);  </div><div class="line">    lis[1].i=sin(2.0*PI/n);  </div><div class="line">    for(i=2;i&lt;=(n-1)*(n-1);i++)&#123;  </div><div class="line">        lis[i]=multi(lis[1],lis[i-1]);  </div><div class="line">    &#125;  </div><div class="line">    for(i=0;i&lt;n;i++)&#123;  </div><div class="line">        for(j=0;j&lt;n;j++)&#123;  </div><div class="line">            W[i][j]=lis[i*j];  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    complex sum;  </div><div class="line">    for(i=0;i&lt;n;i++)&#123;  </div><div class="line">        sum.r=0;sum.i=0;  </div><div class="line">        for(j=0;j&lt;n;j++)&#123;  </div><div class="line">            sum.r+=W[i][j].r*in[j][0]-W[i][j].i*in[j][1];  </div><div class="line">            sum.i+=W[i][j].i*in[j][0]+W[i][j].r*in[j][1];  </div><div class="line">        &#125;  </div><div class="line">        out[i]=fi(sum.r/n);  </div><div class="line">    &#125;  </div><div class="line">    for(i=0;i&lt;n;i++) delete []W[i];  </div><div class="line">    delete []W;  </div><div class="line">    delete []lis;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="2D-IDFT-Formula"><a href="#2D-IDFT-Formula" class="headerlink" title="2D-IDFT Formula"></a>2D-IDFT Formula</h2><center><br><img src="http://img.blog.csdn.net/20170924134437758?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300"><br></center><br>F(u, v) is a spectrum of size MxN, the relation between Euler Formula and Trigonometric Function is:<br><center><br>e^(it) = cos(t)+i·sin(t)<br>e^(-it) = cos(t)-i·sin(t)<br></center><h2 id="2D-IDFT-Code"><a href="#2D-IDFT-Code" class="headerlink" title="2D-IDFT Code"></a>2D-IDFT Code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">// Author: 围城</div><div class="line">typedef struct complex</div><div class="line">&#123;</div><div class="line">double real;</div><div class="line">double imagin;</div><div class="line">&#125; COMPLEX;</div><div class="line"></div><div class="line">int IDFT2D(COMPLEX *src,COMPLEX *dst,int size_w,int size_h)&#123;  </div><div class="line">for(int i=0;i&lt;size_w;i++)&#123;  </div><div class="line">for(int j=0;j&lt;size_h;j++)&#123;  </div><div class="line">double real=0.0;  </div><div class="line">double imagin=0.0;  </div><div class="line">for(int u=0;u&lt;size_w;u++)&#123;  </div><div class="line">for(int v=0;v&lt;size_h;v++)&#123;  </div><div class="line">double R=src[u*size_w+v].real;  </div><div class="line">double I=src[u*size_w+v].imagin;  </div><div class="line">double x=Pi*2*((double)i*u/(double)size_w+(double)j*v/(double)size_h);  </div><div class="line">real+=R*cos(x)-I*sin(x);  </div><div class="line">imagin+=I*cos(x)+R*sin(x);  </div><div class="line"></div><div class="line">&#125;  </div><div class="line">&#125;  </div><div class="line">dst[i*size_w+j].real=(1./(size_w*size_h))*real;  </div><div class="line">dst[i*size_w+j].imagin=(1./(size_w*size_h))*imagin;  </div><div class="line"></div><div class="line">&#125;  </div><div class="line">&#125;  </div><div class="line">return 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;IDFT-Formula&quot;&gt;&lt;a href=&quot;#IDFT-Formula&quot; class=&quot;headerlink&quot; title=&quot;IDFT Formula&quot;&gt;&lt;/a&gt;IDFT Formula&lt;/h2&gt;&lt;center&gt;&lt;br&gt;&lt;img src=&quot;http://img.
      
    
    </summary>
    
      <category term="Mathematics" scheme="http://yoursite.com/categories/Mathematics/"/>
    
    
      <category term="Graphics" scheme="http://yoursite.com/tags/Graphics/"/>
    
      <category term="Fourier" scheme="http://yoursite.com/tags/Fourier/"/>
    
  </entry>
  
  <entry>
    <title>Discrete Fourier Transform And Two-Dimensional Discrete Fourier Transform</title>
    <link href="http://yoursite.com/2017/05/04/Discrete-Fourier-Transform-And-Two-Dimensional-Discrete-Fourier-Transform/"/>
    <id>http://yoursite.com/2017/05/04/Discrete-Fourier-Transform-And-Two-Dimensional-Discrete-Fourier-Transform/</id>
    <published>2017-05-03T17:24:25.000Z</published>
    <updated>2017-09-24T06:15:05.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DFT-Formula"><a href="#DFT-Formula" class="headerlink" title="DFT Formula"></a>DFT Formula</h2><center><br><img src="http://img.blog.csdn.net/20170924124811179?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="DFT"><br></center><br>N is the size of the sequence. Fundamental Components W = e^[-j*(2pi/N)], W^(-nk) is K subharmonic component.<br>The relation between Euler Formula and Trigonometric Function is:<br><center><br>e^(it) = cos(t)+i·sin(t)<br>e^(-it) = cos(t)-i·sin(t)<br></center><h2 id="DFT-Code"><a href="#DFT-Code" class="headerlink" title="DFT Code"></a>DFT Code</h2><p>I deleted my DFT code unconsciously. The code below is downloaded on the Internet. Thanks <a href="http://blog.csdn.net/calcular/article/details/46804779" target="_blank" rel="external">Calcular</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">// Author: Calcular</div><div class="line">struct complex&#123;  </div><div class="line">    double r,i;  </div><div class="line">&#125;;  </div><div class="line"></div><div class="line">complex multi(complex a,complex b)&#123;  </div><div class="line">    complex tmp;  </div><div class="line">    tmp.r=a.r*b.r-a.i*b.i;  </div><div class="line">    tmp.i=a.r*b.i+a.i*b.r;  </div><div class="line">    return tmp;  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">int fi(double in)&#123;  </div><div class="line">    if((in-(int)in)&gt;0.5) return (int)in+1;  </div><div class="line">    else return (int)in;  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">void DFT(int *in,double **out,const int &amp;n)  </div><div class="line">&#123;  </div><div class="line">    int i,j;  </div><div class="line">    complex **W=new complex*[n];  </div><div class="line">    for(i=0;i&lt;n;i++)&#123;  </div><div class="line">        W[i]=new complex[n];  </div><div class="line">    &#125;  </div><div class="line">    complex *lis=new complex[(n-1)*(n-1)+1];  </div><div class="line">    lis[0].r=1;lis[0].i=0;  </div><div class="line">    lis[1].r=cos(2.0*PI/n);  </div><div class="line">    lis[1].i=-1.0*sin(2.0*PI/n);  </div><div class="line">    for(i=2;i&lt;=(n-1)*(n-1);i++)&#123;  </div><div class="line">        lis[i]=multi(lis[1],lis[i-1]);  </div><div class="line">    &#125;  </div><div class="line">    for(i=0;i&lt;n;i++)&#123;  </div><div class="line">        for(j=0;j&lt;n;j++)&#123;  </div><div class="line">            W[i][j]=lis[i*j];  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    complex sum;  </div><div class="line">    for(i=0;i&lt;n;i++)&#123;  </div><div class="line">        sum.r=0;sum.i=0;  </div><div class="line">        for(j=0;j&lt;n;j++)&#123;  </div><div class="line">            sum.r+=in[j]*W[i][j].r;  </div><div class="line">            sum.i+=in[j]*W[i][j].i;  </div><div class="line">        &#125;  </div><div class="line">        out[i][0]=sum.r;  </div><div class="line">        out[i][1]=sum.i;  </div><div class="line">    &#125;  </div><div class="line">    for(i=0;i&lt;n;i++) delete []W[i];  </div><div class="line">    delete []W;  </div><div class="line">    delete []lis;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="2D-DFT-Formula"><a href="#2D-DFT-Formula" class="headerlink" title="2D-DFT Formula"></a>2D-DFT Formula</h2><center><br><img src="http://img.blog.csdn.net/20170924131751299?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2FsbE91V2VpQ2hlbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" width="300"><br></center><br>f(x, y) is a matrix of size MxN, the relation between Euler Formula and Trigonometric Function is:<br><center><br>e^(it) = cos(t)+i·sin(t)<br>e^(-it) = cos(t)-i·sin(t)<br></center><h2 id="2D-DFT-Code"><a href="#2D-DFT-Code" class="headerlink" title="2D-DFT Code"></a>2D-DFT Code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">// Author: 围城</div><div class="line">typedef struct complex</div><div class="line">&#123;</div><div class="line">double real;</div><div class="line">double imagin;</div><div class="line">&#125; COMPLEX;</div><div class="line"></div><div class="line">int DFT2D(double *src,COMPLEX *dst,int size_w,int size_h)&#123;  </div><div class="line">for(int u=0;u&lt;size_w;u++)&#123;  </div><div class="line">for(int v=0;v&lt;size_h;v++)&#123;  </div><div class="line">double real=0.0;  </div><div class="line">double imagin=0.0;  </div><div class="line">for(int i=0;i&lt;size_w;i++)&#123;  </div><div class="line">for(int j=0;j&lt;size_h;j++)&#123;  </div><div class="line">double I=src[i*size_w+j];  </div><div class="line">double x=Pi*2*((double)i*u/(double)size_w+(double)j*v/(double)size_h);  </div><div class="line">real+=cos(x)*I;  </div><div class="line">imagin+=-sin(x)*I;  </div><div class="line"></div><div class="line">&#125;  </div><div class="line">&#125;  </div><div class="line">dst[u*size_w+v].real=real;  </div><div class="line">dst[u*size_w+v].imagin=imagin;  </div><div class="line"></div><div class="line">&#125;  </div><div class="line"></div><div class="line">&#125;  </div><div class="line">return 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DFT-Formula&quot;&gt;&lt;a href=&quot;#DFT-Formula&quot; class=&quot;headerlink&quot; title=&quot;DFT Formula&quot;&gt;&lt;/a&gt;DFT Formula&lt;/h2&gt;&lt;center&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog
      
    
    </summary>
    
      <category term="Mathematics" scheme="http://yoursite.com/categories/Mathematics/"/>
    
    
      <category term="Graphics" scheme="http://yoursite.com/tags/Graphics/"/>
    
      <category term="Fourier" scheme="http://yoursite.com/tags/Fourier/"/>
    
  </entry>
  
  <entry>
    <title>Automatic Generation of Gauss Filter</title>
    <link href="http://yoursite.com/2017/04/19/Automatic%20Generation%20of%20Gauss%20Filter/"/>
    <id>http://yoursite.com/2017/04/19/Automatic Generation of Gauss Filter/</id>
    <published>2017-04-19T14:45:31.000Z</published>
    <updated>2017-09-24T06:11:18.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Formula"><a href="#Formula" class="headerlink" title="Formula"></a>Formula</h2><p><center><br>H(i,j) = (1 / 2pi <em> sigma^2) </em> e^{[(i-k-1)^2 + (j-k-1)^2] / (2*sigma^2)}<br></center><br>The size of the filter is 2k+1 and (i, j) represents a position in the coordinate. The origin of coordinate is the central position of the filter. Pi is circumference ratio and sigma is standard deviation.</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">ElementType** malloc2DArray(int nRow, int nColumn)</div><div class="line">&#123;</div><div class="line">ElementType **filter = (ElementType**)malloc(sizeof(ElementType*)*nRow);</div><div class="line">for (int y = 0;y &lt; nRow;y++) &#123;</div><div class="line">*(filter+y) = (ElementType*)malloc(sizeof(ElementType)*nColumn);</div><div class="line">&#125;</div><div class="line"></div><div class="line">return filter;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ElementType** makeGaussianFilter(int size, ElementType sigma)</div><div class="line">&#123;</div><div class="line">ElementType** filter = malloc2DArray(size, size);</div><div class="line">int center = (size - 1) / 2;</div><div class="line">ElementType sum = 0;</div><div class="line">ElementType x2 = 0;</div><div class="line">ElementType y2 = 0;</div><div class="line"></div><div class="line">for (int y = 0;y &lt; size;y++)</div><div class="line">&#123;</div><div class="line">x2 = pow(ElementType(y-center), 2);</div><div class="line">for (int x = 0;x &lt; size;x++)</div><div class="line">&#123;</div><div class="line">y2 = pow(ElementType(x-center), 2);</div><div class="line">*(*(filter+y)+x) = exp(-(x2+y2) / (2*sigma*sigma));</div><div class="line">sum += *(*(filter+y)+x);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (0.0 != sum)</div><div class="line">&#123;</div><div class="line">for (int y = 0;y &lt; size;y++)</div><div class="line">&#123;</div><div class="line">for (int x = 0;x &lt; size;x++) &#123;</div><div class="line">*(*(filter+y)+x) /= sum;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">return filter;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ElementType* GaussianFilter(int size, ElementType sigma)</div><div class="line">&#123;</div><div class="line">if (!(size%2)) &#123;</div><div class="line">size += 1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ElementType **filter2D = makeGaussianFilter(size, sigma);</div><div class="line">ElementType *filter = (ElementType*)malloc(sizeof(ElementType)*size*size);</div><div class="line"></div><div class="line">for (int y = 0;y &lt; size;y++)</div><div class="line">&#123;</div><div class="line">for (int x = 0;x &lt; size;x++) &#123;</div><div class="line">*(filter+y*size+x) = *(*(filter2D+y)+x);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">return filter;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Formula&quot;&gt;&lt;a href=&quot;#Formula&quot; class=&quot;headerlink&quot; title=&quot;Formula&quot;&gt;&lt;/a&gt;Formula&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;br&gt;H(i,j) = (1 / 2pi &lt;em&gt; sigma^2) &lt;/em&gt; 
      
    
    </summary>
    
      <category term="Mathematics" scheme="http://yoursite.com/categories/Mathematics/"/>
    
    
      <category term="Graphics" scheme="http://yoursite.com/tags/Graphics/"/>
    
      <category term="Gaussian" scheme="http://yoursite.com/tags/Gaussian/"/>
    
  </entry>
  
  <entry>
    <title>RGB To Gray Or To Lab</title>
    <link href="http://yoursite.com/2017/03/17/RGB-To-Gray-Or-To-Lab/"/>
    <id>http://yoursite.com/2017/03/17/RGB-To-Gray-Or-To-Lab/</id>
    <published>2017-03-17T09:12:11.000Z</published>
    <updated>2017-09-24T05:55:14.549Z</updated>
    
    <content type="html"><![CDATA[<p>To implement Spectral Residual Approach， I need to transform the images from RGB space into Gray space.</p><h2 id="RGB-To-Gray"><a href="#RGB-To-Gray" class="headerlink" title="RGB To Gray"></a>RGB To Gray</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Gray = R*0.299 + G*0.587 + B*0.114</div></pre></td></tr></table></figure><h2 id="RGB-To-Lab"><a href="#RGB-To-Lab" class="headerlink" title="RGB To Lab"></a>RGB To Lab</h2><p>To implement Frequency Tuned Approach， I need to transform the images from RGB space into Lab space.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">void RGB2Lab(double R, double G, double B, double &amp;L, double &amp;a, double &amp;b)</div><div class="line">&#123;</div><div class="line">double X, Y, Z, fX, fY, fZ;</div><div class="line"></div><div class="line">X = 0.412453*R + 0.357580*G + 0.180423*B;</div><div class="line">Y = 0.212671*R + 0.715160*G + 0.072169*B;</div><div class="line">Z = 0.019334*R + 0.119193*G + 0.950227*B;</div><div class="line"></div><div class="line">X /= (255 * 0.950456);</div><div class="line">Y /=  255;</div><div class="line">Z /= (255 * 1.088754);</div><div class="line"></div><div class="line">if (Y &gt; 0.008856)</div><div class="line">&#123;</div><div class="line">fY = pow(Y, 1.0/3.0);</div><div class="line">L = 116.0*fY - 16.0;</div><div class="line">&#125;</div><div class="line">else</div><div class="line">&#123;</div><div class="line">fY = 7.787*Y + 16.0/116.0;</div><div class="line">L = 903.3*Y;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (X &gt; 0.008856) &#123;</div><div class="line">fX = pow(X, 1.0/3.0);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">fX = 7.787*X + 16.0/116.0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (Z &gt; 0.008856) &#123;</div><div class="line">fZ = pow(Z, 1.0/3.0);</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">fZ = 7.787*Z + 16.0/116.0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">a = 500.0*(fX - fY);</div><div class="line">b = 200.0*(fY - fZ);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><a href="http://tonyzhang94.github.io/2017/07/01/%E6%AF%95%E8%AE%BE-%E8%A7%86%E8%A7%89%E6%98%BE%E8%91%97%E6%80%A7%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%AE%9E%E7%8E%B0/" target="_blank" rel="external">Transformation Formulas</a> (Page 18-19, Formula 4-4 To 4-9)</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="http://blog.sina.com.cn/s/blog_74cf26810100rjc3.html" target="_blank" rel="external">RGB to Gray 流行算法</a></li><li><a href="http://www.cnblogs.com/hrlnw/p/4126017.html" target="_blank" rel="external">RGB转LAB色彩空间</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;To implement Spectral Residual Approach， I need to transform the images from RGB space into Gray space.&lt;/p&gt;
&lt;h2 id=&quot;RGB-To-Gray&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="Notes" scheme="http://yoursite.com/categories/Notes/"/>
    
    
      <category term="Graphics" scheme="http://yoursite.com/tags/Graphics/"/>
    
      <category term="Color Space" scheme="http://yoursite.com/tags/Color-Space/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04 Install Scrapy</title>
    <link href="http://yoursite.com/2016/11/19/Ubuntu16.04-Install-Scrapy/"/>
    <id>http://yoursite.com/2016/11/19/Ubuntu16.04-Install-Scrapy/</id>
    <published>2016-11-19T14:34:13.000Z</published>
    <updated>2017-09-23T01:00:18.261Z</updated>
    
    <content type="html"><![CDATA[<h2 id="First-Step"><a href="#First-Step" class="headerlink" title="First Step"></a>First Step</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</div></pre></td></tr></table></figure><h2 id="Second-Step"><a href="#Second-Step" class="headerlink" title="Second Step"></a>Second Step</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/apt/sources.list</div></pre></td></tr></table></figure><p>Add these sources to the tail of the file:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ precise-updates main restricted</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ precise-updates main restricted</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ precise universe</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ precise universe</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ precise-updates universe</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ precise-updates universe</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ precise multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ precise multiverse</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ precise-updates multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ precise-updates multiverse</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</div><div class="line"></div><div class="line">deb http://security.ubuntu.com/ubuntu precise-security main restricted</div><div class="line">deb-src http://security.ubuntu.com/ubuntu precise-security main restricted</div><div class="line">deb http://security.ubuntu.com/ubuntu precise-security universe</div><div class="line">deb-src http://security.ubuntu.com/ubuntu precise-security universe</div><div class="line">deb http://security.ubuntu.com/ubuntu precise-security multiverse</div><div class="line">deb-src http://security.ubuntu.com/ubuntu precise-security multiverse</div></pre></td></tr></table></figure></p><h2 id="Third-Step"><a href="#Third-Step" class="headerlink" title="Third Step"></a>Third Step</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get upgrade</div></pre></td></tr></table></figure><p>Choose default option. Two instructions above may take few minutes.</p><h2 id="Install-Scrapy"><a href="#Install-Scrapy" class="headerlink" title="Install Scrapy"></a>Install Scrapy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python-scrapy</div></pre></td></tr></table></figure><h2 id="Other-Python-Package"><a href="#Other-Python-Package" class="headerlink" title="Other Python Package"></a>Other Python Package</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python-psycopg2</div><div class="line">sudo apt-get install python-bs4</div><div class="line">sudo apt-get install python-requests</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;First-Step&quot;&gt;&lt;a href=&quot;#First-Step&quot; class=&quot;headerlink&quot; title=&quot;First Step&quot;&gt;&lt;/a&gt;First Step&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="Notes" scheme="http://yoursite.com/categories/Notes/"/>
    
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Install Postgresql On Centos</title>
    <link href="http://yoursite.com/2016/10/09/Install-Postgresql-On-Centos/"/>
    <id>http://yoursite.com/2016/10/09/Install-Postgresql-On-Centos/</id>
    <published>2016-10-09T13:48:27.000Z</published>
    <updated>2017-09-22T04:44:50.283Z</updated>
    
    <content type="html"><![CDATA[<p>Today, I want to try a new DB-postgresql and prepare to install it on my server.There some problems stand in the way during I install postgresql.</p><h2 id="resource"><a href="#resource" class="headerlink" title="resource"></a>resource</h2><p>At the begining, I tried to find some commands to download and install postgresql.Unfortunately, the resource were not found.Then I started to find resource on the Internet.I recommend a website to readers:</p><p><center><a><a href="https://yum.postgresql.org/9.2/redhat/rhel-6-i386/" target="_blank" rel="external">https://yum.postgresql.org/9.2/redhat/rhel-6-i386/</a></a></center><br>I download version 9.2.18.<br><img src="http://img.blog.csdn.net/20161009223213196" alt="这里写图片描述"></p><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><p>You should install the packages in order.You can use rpm and choose method -ivh.</p><ol><li>postgresql92-libs-9.2.18-1PGDG.rhel6.i686.rpm</li><li>postgresql92-9.2.18-1PGDG.rhel6.i686.rpm</li><li>postgresql92-server-9.2.18-1PGDG.rhel6.i686.rpm</li><li>postgresql92-contrib-9.2.18-1PGDG.rhel6.i686.rpm</li></ol><h2 id="lack-of-dependencies"><a href="#lack-of-dependencies" class="headerlink" title="lack of dependencies"></a>lack of dependencies</h2><p>When I use ‘rpm’ to install postgresql, the command line prompts:<br>libcrypto.so.10 is needed by……<br>libssl.so.10 is needed by……<br>Absolutely, my system lack some files.I try many methods but failed.Then I try to use ‘yum’.I succeed.</p><h2 id="start-and-init"><a href="#start-and-init" class="headerlink" title="start and init"></a>start and init</h2><p>start<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /etc/init.d/postgresql-9.2 start</span></div></pre></td></tr></table></figure></p><p>when we start postgresql first time, command line will prompts us:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/var/lib/pgsql……[FAILED]</div></pre></td></tr></table></figure></p><p>init<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service postgresql-9.2 initdb</span></div></pre></td></tr></table></figure></p><p>start<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service postgresql-9.2 start</span></div></pre></td></tr></table></figure></p><p>add postgresql server into boots<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig postgresql-9.2 on</div></pre></td></tr></table></figure></p><p>change password<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># su - postgres</span></div><div class="line">$ psql</div><div class="line"><span class="comment"># ALTER USER postgres WITH PASSWORD 'postgres'</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Today, I want to try a new DB-postgresql and prepare to install it on my server.There some problems stand in the way during I install pos
      
    
    </summary>
    
      <category term="Notes" scheme="http://yoursite.com/categories/Notes/"/>
    
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
      <category term="postgresql" scheme="http://yoursite.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>Internship In Bertadate Tech</title>
    <link href="http://yoursite.com/2016/10/03/Internship-In-Bertadate-Tech/"/>
    <id>http://yoursite.com/2016/10/03/Internship-In-Bertadate-Tech/</id>
    <published>2016-10-03T00:16:56.000Z</published>
    <updated>2017-09-22T04:44:49.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Interview"><a href="#Interview" class="headerlink" title="Interview"></a>Interview</h2><p>Last semester, during a holy Party conference, my classmeet Liu talked with me about her internship company.Out of curiousity, I asked her how can I get an offer from a company.She told me about her experience detailedly.Then I forget it.After two or three weeks, Liu texted me a message and it said her internship company, Bertadata, needed more engineers.I handed in my CV and the HR of Bertadata called me.She asked me which job did me want to choose.I anwsered I wanted to be big data analyst.She said that job was non-undergraduate-oriented.Then I asked what undergraduate-oriented jobs did they provide.The said python crawler engineer.Pardon?How could I choose from only one option……<br>The next day, I rode to YuanQu2.5, 15 kilometers away from my dormitary.It tooks me about forty-five minutes.When I entered the gate, I saw my classmate Wang had already there and my classmate Tan came ten minutes later.Firstly, we took an exam.Then, I took three or four round of interview.The interviewer asked me some questions about which areas are you interested in, what projects have you token part in or do you have intention to get a master degree and so on.<br>The next day, the HR called me when I was sleeping.she congratulated me for my acception.</p><h2 id="Main-Task"><a href="#Main-Task" class="headerlink" title="Main Task"></a>Main Task</h2><p>1- writing scripts and test<br>2- case reason backtracking<br>3- maintaining<br>4- having conference<br>5- learning</p><h2 id="Daily"><a href="#Daily" class="headerlink" title="Daily"></a>Daily</h2><p>Almost every day, I would be the first three people who arrived at company.And the most staff would arrive after half past nine.The company provided breakfast, like shaobing, shengjianbao, milk, jidanbing, doujiang , baozi and so on.They are very delicious.Our team had a daily meeting at about 10a.m. and we almost reported the same thing everyday.The leader required us to complete two or three scripts everyday and I completed twenty scripts on average at one day.Frankly, I didn’t submit all my scripts to the sever everyday.Insteading, I only submitted three scripts everyday and I would submitted the remaining scripts in the other coming day.Therefore, I have amounts of free time during work.What did I do in the free time?Firstly, I watched many Olympic games and, fortunately, witnessed the chapionship journey of Chinese Women’s Volleyball.Second, I read many books such as Japaness History, Feng Shen Yan Yi.Absolutely, I paid most of time to work or learning.I integrated a series of methods for KaiTingGongGao and create a strategy for Case Reason Backtracing.Also, I tried to learn some knowledge and skills about big data.</p><h2 id="Practical-Welfare"><a href="#Practical-Welfare" class="headerlink" title="Practical Welfare"></a>Practical Welfare</h2><p>1- some snacks<br>2- free fitness facility<br>3- meels</p><h2 id="Dissatisfaction"><a href="#Dissatisfaction" class="headerlink" title="Dissatisfaction"></a>Dissatisfaction</h2><p>How boring the daily tasks are!<br>What terrible salary they provided!</p><h2 id="Resignation"><a href="#Resignation" class="headerlink" title="Resignation"></a>Resignation</h2><p>Graduately, I started to find all the new knowledge and skills I acquire have nothing to do with my job and my daily task was mere repetition.Further, the company set a ridiculous rule that there will be some deductions if you absent on Saturday.Official explanation is that company allow staff to be late for work, so they will work on Saturday without any extra allowance.What fucking logic!What’s more they didn’t perform their promise that offering training course every week and sharing knowledge or skills regularing.<br>To be honest, the company has a nice environment and promising further.People there are very friendly and kind.Unfortunately, my ability couldn’t get full used and they weren’t willing to provide me the job I want in a short while.So, I proposed my resignation and leave the company.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Interview&quot;&gt;&lt;a href=&quot;#Interview&quot; class=&quot;headerlink&quot; title=&quot;Interview&quot;&gt;&lt;/a&gt;Interview&lt;/h2&gt;&lt;p&gt;Last semester, during a holy Party confere
      
    
    </summary>
    
      <category term="Life-Events" scheme="http://yoursite.com/categories/Life-Events/"/>
    
    
      <category term="Internship" scheme="http://yoursite.com/tags/Internship/"/>
    
      <category term="Bertadata" scheme="http://yoursite.com/tags/Bertadata/"/>
    
  </entry>
  
  <entry>
    <title>艰辛的保研之路</title>
    <link href="http://yoursite.com/2016/09/30/%E8%89%B0%E8%BE%9B%E7%9A%84%E4%BF%9D%E7%A0%94%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2016/09/30/艰辛的保研之路/</id>
    <published>2016-09-29T17:42:07.000Z</published>
    <updated>2017-09-23T04:24:24.857Z</updated>
    
    <content type="html"><![CDATA[<p>最近一段时间经常有人问我保研去了哪里，我一直都在含糊其辞，也说了一些谎话（如在考虑包内还是保外；保外只是报名了，最终结果还不知道）。对于大家的关心我先表示衷心的感谢，然后我想对我说过的这些谎话表示一下抱歉，我这么说首先是因为本人喜欢低调，不喜欢成为别人嘴里日常的话题，其实我也一直很低调，但还是经常能听到关于我的故事（暂且称之为故事吧，我也想不到更好的词了），比如前段时间人人都说我机试做出来了，我只能表示我的结果其实有错，并没有全对，但是无论我怎么解释大家传的都是我做出来了，程序速度很快，我只能表示这样的话我从来没有说过……其次，我确实没有百分百确定我以后去哪个学校，虽然当时百分之九十九的可能是去中科大，offer我两个月前也拿到了，但是还有一丝不确定，最后小概率事件发生了。</p><p>我写这篇博客不是想炫耀自己是985收割机，只是想在经历了将近七个月的保研道路后留下些什么，并且记录下自己的一些经历和经验，给需要的学弟学妹们作为参考，所以希望读者仅仅把这篇博客推荐给需要的人，不要替我张扬，再次谢过！</p><p>在博客的开始我先简答的回答一下大家最关心的问题：<br>1- 你最后去了哪里？<br>浙江大学<br>2- 你拿到了那些学校的提前录取？<br>西安交通大学， 中国科学技术大学， 南京大学， 浙江大学（按获得offer时间顺序排序，与学校排名无关）<br>3- 你报名了哪些学校的提前推免面试？<br>华东师范大学， 南京大学， 西安交通大学， 中国科学技术大学， 武汉大学， 华中科技大学， 东南大学， 同济大学， 浙江大学（按报名时间顺序排序，与学校排名无关）</p><h2 id="关于面试"><a href="#关于面试" class="headerlink" title="关于面试"></a>关于面试</h2><p>先说一下一般学校要求准备的材料：<br>1- 成绩单（学校凌云楼可以打印）<br>2- 排名证明（需要学院盖章）<br>3- 英语四六级成绩单及其他（如雅思、托福、高级口译等）<br>4- 推荐信（各个学校要求不一样）<br>5- 论文等其他学术成果证明<br>其中成绩单和排名证明建议一次多准备几份，另外个人建议准备：<br>1- 获奖证书复印件<br>2- 个人简历若干份<br>3- 个人陈述若干份<br>4- 中文自我介绍至少一种<br>5- 英文自我介绍至少一种<br>6- 论文、项目、竞赛、学科知识（数据结构、离散数学、操作系统、计算机网络、计算机体系结构、编译原理等）<br>7- 兴趣方向及理由<br>8- 是否愿意直博，学硕/专硕<br>9- 硕士毕业后去向（读博、出国、就业、创业等）</p><p>推免面试具体形式有很多，如群面、机试、笔试等，综合评定的方式大致有三种：<br>群面成绩 + 材料分<br>笔试（机试）成绩 + 群面成绩 + 材料分<br>笔试（机试）成绩*比重 + 群面成绩*比重 + 材料分*比重</p><p><strong>群面</strong>就是多个老师根据你的材料问你问题。一般的流程是你先做一个简短的中文或英文的自我介绍，有时会同时需要。其次老师会问你的论文，如果没有论文会问你项目，如果没有论文会问你竞赛，如果以上都没有会问你学科知识。这说明如果你有论文或者竞赛，你需要提前回顾一下过程，清楚自己在其中做了什么，但是这不意味着学科知识可以不复习，只是你被问及学科知识的可能性会小很多。关于论文会被如何提问我不清楚也没有听过；项目方面的问题有项目是做什么的、你在其中做了什么、项目用了哪些技术、这个项目后来的使用情况；竞赛方面……我没有拿得出手的竞赛成绩，但是我被问及过一次，具体看我西交大面试的经历吧；学科知识方面，比较温柔的问法是先问你最擅长哪门课，然后问你这门课的知识，比较残暴的问法是先问你擅长哪些课程，然后问其他课的知识，直接问知识点还算是比较折中的。我建议大家复习的学科有数据结构与算法、离散数学、操作系统、计算机网络、C&amp;C++&amp;java，至于编译原理和计算机体系结构一直传说有学长学姐被问到，但是没有直接听说谁被问到过。剩下的时间就看老师心情了，心情好和你拉拉家常，心情不好直接pass到下一位，再差的话可能会问你本科这门课谁教的，要去问你老师怎么教的（最后这种情况985学生遇到的比较多，211没听说过……估计根本不关心……伤心五秒钟……）</p><p><strong>机试</strong>意在考你编写小程序，考你基本算法。首先建议事先温故一下C（所有学校都可以用C，但是有些学校要求必须用C）。算法方面没有想象中的那么难，但是对于一般人来说确实很难，会有些简单的思维题要你找规律，其他常考的算法有简单的搜索策略、Dijkstra、最小生成树、贪心算法、动态规划、有时限和空间限制的查找与排序等。</p><p><strong>材料分</strong>是学校根据你的本科出生给你一个基础分乘以一个系数（排名、专业人数、GPA）加上英语成绩（四六级及其他），有质量的论文和学术成果好像是有加分的，项目肯定是没有的。</p><p>另外我想说明一下有带比重的笔试和不带比重笔试的区别。<strong>不带比重的笔试成绩仅仅是一个参考</strong>，能多答对必然是好的，不会也不必紧张，你只需要把你认为合理的过程写下就好，实在不会就写不会，然后扯一些自己熟悉的东西，千万别留下大片空白。我参加过中科大一个实验室的笔试，我笔试成绩是零分，成绩单我大概扫了一眼，大约有六十多人参加了这场面试，最高分七十多，大部人得分在三四十分左右，最后录了十三个，其中就包括一分没得的我，这主要得益于我的面试，具体的面试过程可以看我下面的中科大面试经历。如果笔试成绩是按比重加入总分的那就需要加以重视了，不要因为笔试成绩拖累了总分。</p><p>最后我想提醒打算参加保研面试的学弟学妹，<strong>合理看待自己的荣誉证书的分量</strong>。为什么这么说，大部分人的获奖证书中本科学校的证书占了很大比例，这时你就要对周围竞争对手的证书档次进行预估判断，如果你的奖无法脱颖而出，那你所持有的奖项就不能给你群面加分，甚至会跌你的身价。我第一场面试在西交大，当时将我本科获得的所有奖都和老师说了一遍，结果看到的是老师们一脸不耐烦。出来后和大家交流了一下，周围的同学获得的奖都差不多，基本都是国奖、特等奖，所以我瞬间明白了为什么老师为什么对我的获奖情况没有半点关注。我的第二场面试是参加南京大学的，我原先准备挑几个分量最重的奖项和老师介绍，结果在我刚说完“我本科因成绩优异获得了以下荣誉时”，老师就打断我并问我获得过哪些校外的奖励，于是我瞬间一脸懵逼。中科大的夏令营为期六天，学院面试安排在第四天，第三天下午会有一个冷餐宴。在冷餐宴上各组组长会介绍自己组的组员，大致情况是百分之八十以上是985，十个人里有三四个人拿过不止一次国奖，GPA4.0，在专业人数超过一百甚至三百的985学校里排名第一或前百分之一，剩下很多人具有ACM国家二等奖及以上(国家二等是我当时看到在ACM领域最低的)，数学建模国际二等奖及以上（同上），其中还有不少人是同时具有多次国家以及ACM和数学建模等国家国际奖项的，如果十个人里还剩下一个那应该说的就是我。于是在第四天面试时调整了我的自我介绍“我本科成绩优异排名一直名列前茅，每年我都拿到了学校最高的荣誉及奖项。我擅长数学和编程，半数以上的数学类和编程类课程我都拿到了4.0或3.9”，获奖证书具体内容只字不提。在浙大，基本看不见除了西电之外的211学生，虽然没有像中科大冷餐宴的活动，但我大致了解了一下周围人的情况，浙大的竞争比中科大还要再高一层。</p><h2 id="保研经历"><a href="#保研经历" class="headerlink" title="保研经历"></a>保研经历</h2><p>这里我谈一些我具体的经历，主要按时间顺序记叙，并且我想尽可能把所有经历和了解的事情都记录在这里（就当是日记了），其中还会夹杂一些我的吐槽，所以可能会写的比较乱。西交大和南大我去的比较早，有些事我已经记得不是很清楚了。</p><h3 id="西安交通大学"><a href="#西安交通大学" class="headerlink" title="西安交通大学"></a>西安交通大学</h3><p>西安交大计算机系属于电信学院，西交大属于C9，但是个人感觉西交大正在没落。综合看全国的排名（十几名，甚至二十名之后）以及生源，西交大和东南同济差不多，如果不看西交大的名气，感觉还不如东南同济。在西交，竞争压力并不大，计算机系面试参加面试的985和211基本是1：1，一共220多人，最后录取76人。西安交大也是我参加四场面试中感受到竞争压力最小的学校之一，但是事前我还是很紧张的。我用一个月复习了一遍所有重要的课程，然后花了一个星期准备了一份简历、一份个人陈述和其他材料，另外我还提前联系了一个导师，来回邮件发了好几封。除了面试，整个旅程我也挺紧张的，因为快一年我都没有出过远门了。另外再插一句，坐飞机一定要买延误险！当时买的下午两点在朔方起飞的航班，结果三点的时候飞机还在深圳机场……当天延误了四个小时，回来时买的十点的票结果一点才起飞……来回为了省一共四十块的延误险损失了1400的意外收入，1400完全可以抵过我这趟的所有开销了……回归正题，当晚我九点多才到旅馆，入住后没有标间了，只有三人间……所以以后要去面试的学弟学妹一定要早点到啊……室友是贵州大学的，还有一个天津大学的，天大的好像觉得住宿条件不好自己出去住了（不愧是从帝都附近来的）和室友聊了一个晚上，问起大家学校排名，都很谦虚，都只说自己前百分之五（后来我知道他专业排名第二）第二天去了西交的康桥餐厅，要是我们学校的食堂要有这么好就好了，真是羡慕嫉妒恨，午餐时买五块钱牛肉可以装满最大的盛菜块，价格非常的便宜。早上听了一场宣讲，除了开始介绍学院和招生政策我记得其他我都不知道，因为我睡着了，下午分系院宣讲，我一样睡着了。晚上回旅馆准备第二天面试，临时准备了一下项目经历。第二天很早去，但是我排在中间偏后的位置。面试的大致流程是这样的，先自我介绍，老师可能会随时打断并提问，然后抽一张纸，纸上是一小段英文（大约五六行），先读一遍然后立即翻译一遍，然后老师会对其提问（提问和回答好像是中文，我记不得了，因为我当时没有被提问及……）之后老师会问你论文，没有论文问竞赛，没有竞赛问项目，没有项目就问学科知识。到我面试的时候具体情况是这样的<br>我：（寒暄一段的同时发一遍简历，开始自我介绍等着老师打断。结果我全部讲完了老师都没有提问，于是我又临场发挥夸了一遍西安是一座很好的城市，又夸了一遍西安交大是一所非常好的学校，之后又扯了一段我读研时的计划，后面都是临场编的，但是说的相当的溜。虽然我平时很少说话，但是说起来经常都是长篇大论，以前在部门里我带的干事应该有所体会……有时我也蛮佩服自己这方面能力的23333）<br>我：（最后实在编不下去了）我的自我介绍就到这里，谢谢各位老师……<br>老师A：你抽一张纸读一下<br>我：……（不应该针对我自我介绍提问吗）<br>随手抓了一张，突然感觉纸片太大了……赶紧放回去重新拿了一张小的，顿时觉得自己很机智。读了一遍，基本没看懂写的什么，我也记不得了，好像是关于一些东西的分析。没办法，只能强行回答老师的问题<br>老师B：看你简历上，你是南京人，为什么不去南大？<br>我：……（不应该就着那张纸提问吗……还有我来西交大面试你问这个干什么，备胎心理太重了吗……）南大和西交大都是非常好的学校，去哪都一样（这个能一样吗……但是我还是强行解释了一波）<br>老师B：嗯<br>陷入了一片安静<br>我：……<br>老师C：你获得过什么奖？<br>我：奖学金算吗？<br>老师C：不算<br>我：没有……（其实有，但是拿不出手……）<br>老师C：……那有参加过哪些竞赛呢？<br>我：体育竞赛算吗？<br>老师C：嗯，你就说说参加过那些体育竞赛吧<br>我：……<br>于是我把我本科参加过的校运会，院运会，篮球赛，马拉松，乒乓球赛，跆拳道练习和平时的跑步骑车经历和老师说了一遍，并顺便安利了一下锻炼身体的好处，又说了说当代的医疗等等，同时又强行扯到学习上：健康的身体是学习的基础……（这段话我觉得绝对超过了五分钟，然后每个人平均面试时间是五分钟）<br>老师D：嗯，不错，身体很重要，你喊下一位吧<br>我：……<br>出去后等候的人告诉我我进去了一刻钟……好的吧，感觉除了我自我介绍的前半段，其他有用的什么都没说……最后结果是200多人我排名第十三过了……后来我去招生办办公室报销路费的排队的时候看了一遍简历，报名西交大的985绝大部分都不是专业前三或者专业前百分之一，211只有一半是专业前三。如果要说几次面试那一场是我完全靠实力（排名+GPA）过的话，应该就是西交大了。我觉得苏大出身的专业前几名在西交大是具有一定竞争实力的，和我一同去西安交大的还有一个物科院的，她面电子科学与技术系，她后来和我说她面试的过程，就是老师们两眼放光，有老师当场问她要不要来我的实验室。所以我推荐学弟学妹们可以第一站去西交大试试，锻炼一下也是好的。另外，给想去西安面试的同学推荐一下西安的回民街，美食很多，但是买羊肉串的时候建议问下本地人哪家好吃并且卫生，至于兵马俑则太远了。最后再赞一下西交大的食堂，物美价廉。</p><h3 id="南京大学"><a href="#南京大学" class="headerlink" title="南京大学"></a>南京大学</h3><p>南大面试过程如果要我用一个字形容就是“谜”，整个过程和谜一样。面试的时间大概在我期末考试期间……都有些不想去参加了……南大最早的面试是南大计科的“开放日”，时间大约是五月中旬，但是我错过了……南大是今年名校中最早开始推免面试招生的学校，所以如果有想去南大的学弟学妹一定要尽早关注南大的消息。之后我关注到了南大软件的面试，南大软件面试有一个要求，你必须提前找一个南大的导师推荐你参加面试。我找了一个研究机器学习以及情感分析的导师，还没认识两天就开始让我看他的项目了……我和老师说我在期末考试，这些等我考完试吧……我在考试前紧张的预习中专门抽了一天去面试，面试前看的都是linux和微型计算机接口技术（因为我期末要考），数据结构操作系统这些我都没看。面试前稍微想了一下我该怎么自我介绍，英文的也想了一个版本。等到我面试<br>我：老师们早上好，我是来自苏州大学的XXX，我本科……<br>老师：时间有限，后面还有很多人等着面试，我们就简单的说吧，你专业多少人，排名第几？<br>我：……<br>用了一分钟我和老师一问一答来回了七八个问题，大概都是关于几门重要课程的成绩，有没有论文，学科竞赛或者项目<br>之后老师开始问项目，先问了我做的科研项目管理平台<br>我：那个是用PHP写的，还有css和html5，已经javascript，这个网站的目的是……<br>老师：网站做什么的就不用说了，你说说这个网站用了哪些技术<br>我：（PHP能实现什么技术……）用了thinkphp框架，用了异步机制 （讲实话，这个真的连异步都没有用到……最多只在画表的时候用了一些第三方插件，不能再多了……从此我的简历上再也没有这些网站的制作经历了，除了那款校园电商系统）<br>老师：就这么多？<br>我：嗯……就这么多……<br>老师：那你其他项目呢？<br>我：我还写过一个java的项目（然后我把SSM，IOC，AOP一套一套的讲给老师听）<br>老师：这还差不多<br>我：……<br>之后的问答基本就是<br>老师：你用过XXX吗？<br>我：没……<br>老师：你听过YYY吗？<br>我：没……<br>老师：其他的你还用过什么？<br>我：没有了……<br>老师具体问了什么我都不记得了，一方面我本来就第一听过，另一方面面试完我就去准备期末考试了，也没有做相关的记录（其他的学校面试完我都做了一些记录）<br>其中我只记得一个问题，也是我唯一回答上来的问题：AOP英文怎么说<br>我：aspect oriented programming……<br>然后面试就结束了。不愧是软件学院，全程都在问项目，自我介绍都没让我讲完开头……这大概是我大学以来大大小小的各种面试中表现的最差的一次吧……<br>之后我觉得南大我没有希望了，考完试翻了一下我gmail邮箱，发现了一封这样的邮件：<br>XXX你好：<br>恭喜你以优异的成绩通过南京大学软件学院的面试（老师，你眼瞎了吗……），我们特邀你来…………（大致就是通知我过了，然后想要我来参加他们的一个暑期活动）<br>说真的，那天我表现的真的非常的差，我觉得我自己是没有希望的。等到他们暑期活动出来了，我看到第一天的第一个活动是“笔式”。不是说我过了吗，怎么还有“笔试”。当时我中科大已经过了，而且我也开始意识到软件学院不如计科，所以我后来给南大软件学院回了一封信说我不去了。虽然在南大上学比较方便，但是我慎重考虑了一下，还是再辛苦三年去一个更好的地方吧。过了半个月，我之前找的导师突然找我和我说起了项目……我和导师说<br>我：老师，对不起。因为我当时有事，所以没有能够去参加南大的“笔试”所以我没有被南大录取<br>老师：那个“笔式”不用参加的，只要有导师接受你就可以被录取了<br>我：“笔试”都不参加怎么能被录取……<br>老师：“笔式”参不参加有什么关系？<br>我这时才发现我和老师说的“笔试”和“笔式”好像有些不一样……我又去南大官网通知上看，是“笔式”。然后我认真的去百度百科了一下，还真的有“笔式”这种东西……于是我好像瞬间明白了，南大之前要去参加的不是复试，是让我参加一个系列讲座……<br>我：……<br>后来我和老师解释了一下，我以为不去参加就不能过南大的面试，所以我后来去了中科大面试，并且我也找好导师了，之后又表示了一下惋惜。<br>之后我以为事情就结束了，九月份全国推免系统开放前我接到了南京软件的电话，对面的老师先问我要不要考虑来南大软件，还没有等到我回答就在电话里开始指导我应该怎么报名，我：……，后来我又和老师解释了一遍然后表达了一下惋惜。南京大学是招不到人了吗……<br>最后我建议大家如果没有对软工怀有特别的兴趣，能去计科就去计科吧，我当时看南大软件全国第二，南大计科在全国前十，觉得南大软件可能更好，后来我很后悔，当时应该在南大报名系统上选计科的（南大推免报名系统信息提交后是不能更改的，不仅是南大，东大等很多学校也是这样，所以填写信息的时候一定要慎重，三思而后行）</p><h3 id="中国科学技术大学"><a href="#中国科学技术大学" class="headerlink" title="中国科学技术大学"></a>中国科学技术大学</h3><p>中科大的夏令营一共持续七天，活动挺丰富的，从入营仪式到学校参观再到冷餐宴，在学院面试之后还有羽毛球赛和闭营仪式。先说一下中科大录取的必备条件，一共有三：<br>1- 通过中科大学院面试<br>2- 中科大有老师要你（在这七天内，你可以去找中科大任意一个或多个老师，中科大导师间不会介意你同时联系多个老师，学院官方也是鼓励营员积极联系导师的。有些实验室或老师会再安排面试，笔试或者上机以及综合）<br>3- 获得本科所在学校的推免资格<br>再次强调一下上述三个条件缺一不可。再简单介绍一下中科大学院安排的行程：<br>第一天入营仪式，评选营花营草<br>第二天参观校史馆，各类讲座<br>第三天各实验室宣讲，参观东区图书馆、机群（有天河二号和曙光2000）<br>第四天实验室宣讲（选听），冷餐宴<br>第五天面试<br>第六天优秀营员证书颁发，羽毛球赛<br>第七天闭营仪式<br>其中面试是必须参加的，其他的都可以自己选择是否参加，除了学院面试一切还是以和导师联系为主。<br>第二天早上听讲座，然后在美女机器人的带领下参观校史馆，具体情况不清楚，因为由于一些原因我是第二天晚上到的。我的室友是一个湖大（这是一个很低调并且很厉害的985）数学系的专业第二。等入住事宜都完成了，赶去和组员汇合讨论冷餐宴上的小组展示环节。这里提一下，中科大夏令营是分组的，每十人一组，每组有一个学长学姐带领，但组长是从十个人中选出的，我们组长是武大的（将近四百人专业的前几，具体记不得了，最后他去了上交）。我们组的其他成员，除了我们武大的组长，一个厦大很好看的妹子，一个山大威武雄壮的汉子（这个人我在夏令营中看到次数不超过三），川大的（我和他没怎么交谈过），大工一个很安静但是很学霸的男生，南航的第二（之前已经被北航计科录了，北航计算机全国前五，最后他去了中科院计算所），合工大的大神（虽然是211，最后被复旦高分录取了，一直在百人专业第一，ACM数学建模都有国家二等奖以上，介绍项目时：我做的项目都是游走在法律边缘的，就不说了……666全体ORZ）我们的组长是一个学姐，和我本科一个玩定向越野的同学特别像，无论是从肤色，运动指数还是说话语气。怎么讨论的我就不详细说了。<br>第二天早上听宣讲，中科大不愧是一个非常有钱的学校，我去的所有学校中只有中科大发彩印卡纸的资料，而且是一沓（当然天数也是最久的，旅馆环境也是最好的，唯一一个举办宴席的，羽毛球赛的，我就喜欢这种有钱的学校，不像我本科奖学金一块钱都没有）宣讲的内容就是各实验室介绍以及有些实验室给出了面试报名方式（如果想要这些宣传单照片可以邮件我）。下午学院安排的参观东区院士的研究所，我和我室友没有跟团，去了院长的研究所面试（最后我的导师就是院长，之后我去了浙大……）。面试大致流程是这样的，大家先一一和院长聊几句，然后院长有事先走了……之后就是研究所里其他老师面我们，先是每个人挑一篇英文论文，给半小时看，半个小时候一个一个讲，讲完后问问题。我的面试过程大概是这样的：<br>先把论文讲了什么说一遍（我的是关于coflow调度的）然后老师针对论文问了我一个比较细的问题。之后让我用英文自我介绍……之前院长在的时候我不是用中文介绍过了吗……然后又问了我很多其他的问题，具体我记不得了。最后我问了一个问题，我论文理解的对吗？老师：不全对……<br>之后和一个学长以及一个中山大学的一起赶去东区参观院士的研究所，到了才知道还是听讲座。在中山大学的妹子介绍下，认识了厦门大学软件学院的第二（他后来去了南大直博），还有一个南京人（哪个学校记不得了，后来去了北大）。晚上参加了一个实验室的面试，面试前先要两人一组看一段程序，是一段Matlab程序，两个矩阵做了很多操作，问最后这个程序的意义是什么。我和我们组厦大的组了一队，两个不会matlab的人盯着matlab看了很久，最后还得出了一个比较像样的结论，我们大概是第七第八队解出来的，总体应该排在中间位置。进去之前我们把所有可能会被问到的问题都想好怎么回答了，比如谁先自我介绍，谁讲程序，谁讲分工，大家是怎么分工的（互相合作，不管过程是怎样的，互相合作优势互补都是最好的答案）。所有问题都被我们事先猜中了2333。等我们出来的时候还有好几对正在解题，其实这样的面试题解得对不对并不是关键，即使解错了也没有关系，老师的考察点是你思考的过程以及看你是否有团队合作的精神，纠结于题目本身是没有意义的。<br>第四天，早上去听各实验室具体的宣讲，同样是可以自己选择去不去，去哪个。下午是冷餐宴，主流程是个小组组长介绍组员，然后是个人介绍（报名参与），师生互动，各种游戏。副流程就是我在底下做一个安静的吃瓜群众（真的在吃瓜），看着来自各校的学霸炫耀着自己成绩（在“关于面试”中解释合理看待证书分量时已经提过了，就不再说了），后半段师生互动和游戏环节我去见导师了，这个导师我从六月就开始断断续续联系了，他把之前联系他的都喊出了会堂，一一问了情况，然后讲了自己的方向，并且说了一句我现在依然记忆犹新的话：如果你们来我这，学费和生活费肯定是不用愁的，我这里从来不担心经费不够花的问题，担心的问题是没有时间花钱ORZ如果有一天这句话能从我嘴里说出就好了……老师和我们约好了晚上去他办公室笔试。笔试内容大概是这样的：<br>（先上交手机）<br>1- 用三个0算6，然后三个1，三个2……三个9<br>2- 用四个0算24，用两个0算24（这个至今我还不会……求大神赐教）<br>3- 喝水，用空瓶子换新水的问题，问能喝几瓶（这个大家小学应该都做过）<br>4- 一个蚂蚁从一个一米的橡皮筋一端向另一端爬，速度1cm/s，橡皮筋以1m/s速度拉伸，问蚂蚁能否到另一端<br>去笔试的八个人他录取了四个，但最后一个都没去他那……有一个厦大的最后去了北大，我是从他微信中看到的。<br>面完这家后迅速去面另一家……先参加了一个笔试，然后拿了一个零分去参加面试。由于去的比较晚，所以我是最后一个面的，面试的学长看到我的零分，先是一怔，然后说你这也太……（学长没有把话说完）然后开始面试，先自我介绍，然后他说你和边上人先聊，我看你的github和博客……于是我和边上两个学长先聊了起来。严格来说这两个学长不是来面试的，是来看热闹的……然后其中一个学长<br>问：你在博客中写了什么<br>我：自己课外学习的一些知识，应用技术，算法，生活事件等<br>问：都写了什么算法<br>我：最短路径算法，搜索策略，图论……<br>问：搜索策略有哪些<br>我：盲目搜索，启发式搜索，博弈树……<br>问：盲目搜索有哪些<br>我：bfs，dfs，有权树<br>问：bfs的数据结构是<br>我：……<br>问：是队列，那dfs呢<br>我：栈……<br>问：bfs适用的情况<br>我：对空间要求不高，求问题最优解<br>问：bfs搜索的时间复杂度<br>我：n平方<br>问：如何优化成nlogn<br>我：……<br>问：你知道哪些最短路径算法<br>我：Dijkstra，floyd，spfa<br>问：你知道他们各自优缺点吗<br>我：Dijkstra不能处理……<br>问：好，你既然知道就不用说了<br>我：……<br>问：Dijkstra算法时间复杂度是<br>我：（回想了一下代码）n平方<br>问：通法是n平方，其实可以优化成nlogn，估计你不知道，我就不问了<br>我：（确实不知道）……<br>问：blabla（之后他说的我就开始听不懂……）<br>等那个面试的学长看完了,说我实习期开发的电商平台不错，问我其中做了什么<br>我：个人信息显示与修改、地址管理、宝贝详情页、购物车、结算（除微信与支付宝接口）、订单管理等<br>学长：恩恩，这个做的非常好<br>我：（哈哈，第一次在面试中听到有夸我项目的）<br>学长：我觉得你非常适合专硕<br>我：……<br>学长：你以后想读专硕还是学硕<br>我：学硕啊！<br>然后我和学长实力解释了一波为什么我想读学硕。很多人可能都有同样的疑问，学硕好还是专硕好，答案是学硕和专硕本身没有好坏之分，只有是否适合你的区别。个人有个比较极端的理解，可以说我的理解是错的：专硕的价值在于满足需求，学硕的价值在于创造价值。这么说肯定是错的，但是能帮助大家理解一下。如果说的再通俗一些就是专硕是做项目的，学硕是做科研的，其实这种说法也是错误的。其实在绝大部分学校学硕和专硕培养上是没有区别的，真正决定你是做项目还是做科研的是你选择的导师，换句话说实际意义上的学硕和专硕是你所跟的导师决定的。不过我在这里建议大家如果对项目特别感兴趣，想读专硕，要选择一个能拿到大项目并且具有挑战性项目的导师（这里自行理解吧），不然你以后的学习工作可能是大量的简单重复，水平会一直停留在同一阶平台上停滞不前。其实大部分情况下，老师会在做科研的同时也会有项目，你只要把你的想法和老师沟通就好了。当然这些都是我事后知道的，当时我还是很强势的和学长解释了我为什么一定要读学硕。<br>学长：（继续劝说我读专硕）<br>我：……<br>学长：你说你对机器学习和数据挖掘感兴趣，你说说你对这方面有什么了解<br>我：（把Apriori，FP-tree，聚类，分类，贝叶斯网络，粗糙集，深度学习，遗传算法，回归函数和学长说了一遍，基本也就是把数据挖掘一门课说了一遍）<br>学长：嗯，你可以再考虑一下学硕专硕的问题，我建议你读专硕<br>我：……<br>然后我又和学长聊了很多，大部分我在说我本科实验室内的学习生活，以及他说他研究生阶段实验室生活。这场面试大约持续了半个小时。第二天下午我去找老师的时候，老师告诉我过了，我被分到研究所下一个做机器学习（应用领域为数字图像）老师名下……由于我对数字图像没有一点好感，甚至反感，所以后来我委婉的拒绝了这个老师。这些都是后话。<br>第五天是学院的面试，我被安排在上午靠前的位置，昨天在冷餐宴上特别留意了和我同一组面试的，最前面是四个西工大（两个我没有留意到，1/190，国奖并在国家实验室），然后一个华东师范（没有留意到），我，两个电子科大（只记得有一个擅长格斗），两个湖大（有一个专业第二，还有一个没注意），两个东南（两个专业第一），三个东北大学（后面的的我都没有留意了），两个华南理工，两个吉大，我成为了本组唯一一个211……进去时候我压力还是挺大的，毕竟在我印象里中科大比我之前去的两个学校要好一些，我还是很想拿到这份offer的。<br>我面试的过程大概是这样的：<br>我：尊敬的老师们早上好（开始自我介绍）<br>老师：你是南京人，怎么不去南大？<br>我：……（怎么全是这种问题）中科大好啊！（这里省去一波实力解释）<br>老师：你以后打算读博吗？出不出国？<br>我：（实力解释了一波，其中表达了一下我不直博）<br>老师：你以后的兴趣方向<br>我：大数据，机器学习，数据挖掘<br>老师：那你一定去了老师A的实验室面试吧<br>我：……（确实参加过，但是面试现场老师B的实验室面试我也参加过……瞬间场面特别的尴尬）嗯，我昨天晚上参加了一下。我对……（实力解释一波我为什么对这个感兴趣）我在宣传页上看到老师B的实验室也是研究这方向的，因此老师B的实验室我也去面试过（实力圆场，此处应有掌声啪啪啪）<br>老师：那你对这方面有什么了解呢？<br>我：读过这方面的书，如人工智能与机器学习，大数据时代（由于人工智能与机器学习是一本专业书，看完后基本忘光了，所以和老师讲了很多大数据时代上写了什么）<br>老师：看来你对这方面挺有兴趣的，你以后可以跟着老师A好好做科研<br>我：……（这意思是我过了吗……）保持尴尬的微笑<br>老师：你叫下一位吧<br>我：……<br>这就是面试全过程，只问了为什么不去南大和兴趣方向……<br>中科大学院面试分了上下午，但是中午的时候上午面试结果已经出来了。我面试过了。<br>这里和大家插两句中科大录营的相关事宜。往年夏令营中科大分A营和B营，A营60人参加全程活动并且来回所有费用全额报销，B营60人只参加学院面试并且所有费用自费，往年A营只刷一两个人，B营刷一半。今年听说中科大经费充足，所以只招A营并扩招至120人，最后的录取率好像和往年一样（90/120），按几何概率看这是我参加面试中概率最大的面试。但是我听苏大的一个学长说中科大夏令营每年有两千多人报名，但是我看中科大计科两个交流群上一共900人不到，去除重复的人再加上一些没有加群的人估计只有1000多一些吧（这只是我的估计……）确实能进120人从概率上说也是挺难的，我第一批和第二批都没有能进，后来是有人放弃了夏令营名额我才被补录进营的。在交流群上我看到一个东大的专业第一说自己没进，我觉得中科大审核材料的老师一定不认真……（虽然我必须感谢他把我审核过了……）<br>剩下的活动我就不说了，我也没有参加，因为第五天晚上我就回去了。再给想去中科大的学弟学妹们一个建议，在过了学院面试后一定要第一时间去联系你想要选择的导师，因为导师一旦招满了，就没有名额招你了，很多人时候都后悔没有立即去找导师。</p><h3 id="浙江大学"><a href="#浙江大学" class="headerlink" title="浙江大学"></a>浙江大学</h3><p>其实报名了浙江大学时就没有抱太多希望，很早之前就听说上届计科第一报浙大没有过的事。我也一直没有收到任何关于参加面试的消息直到九月十六日收到了邮件。在买好了车票订好了旅馆后，了解了一下去年录取情况，一共录取155人，其中来自211学校的有17人，在这17人中14个是西电的，瞬间产生了退票的冲动。但是最后我还是去了。我去的比较晚，22号早上的面试，我21号晚上10点的火车，第二天凌晨四点到杭州站，建议大家早一两天到杭州并开始联系导师和实验室，因为22号面试当天我听说前一天就有实验室开始招新面试了。原先准备将重要课程复习一遍的，结果实习工作太忙，回到宿舍洗澡洗衣后已经到十一点了，所以只能说我计划很美好，结果当然是我什么都没有复习。更悲剧的是我乘坐的火车太快了，原本是四点到杭州站的，结果两点整就到了……打车去学校，隔着铁门问保安，得知六点钟开门，剩下四个小时应该去哪……转了好几个门都不让进，最后是正门的保安允许我在保安室里坐到六点……就在火车上和保安室里，我迅速温故了一遍我的简历、中英文自我介绍、项目经历以及学科知识等。等到八点报到，先填志愿表。本来我就没有报希望，索性就填计科，并且不服从调剂，反正中科大offer已经有了。其实我去浙大面试时的心态是极佳的，从头到尾真的是一点都不紧张，全程想的都是快点结束吧，我想去游西湖，还想再去河坊街吃一次“咬不得”的虾仁生煎（我大一时去吃过，良心推荐）。在面试场外主持秩序的学长和我们说，由于一场面试的时间至少要有10分钟，所以每组20号之后的可以先去吃午饭了（我24号）……什么，现在才八点就打发我去吃午饭了？？？！看了一下名单，排在最前面的是从C9来的，然后很喜剧性的每组前二十都是985，20名之后的都是211……我瞬间明白了学长的意思，985都留下，211可以先gun了……于是接下来的四个小时我就假装自己是从985来的，坐在地上，是不是听一听面试完的人被问到了什么。以下是我听到的问题：<br>自我介绍（英文）<br>介绍家乡（英文）<br>研究生阶段你要做什么（英文，master研究生，那位可爱的同志出来时还以为master是本科生2333）<br>兴趣方向（英文）<br>兴趣爱好（英文）<br>prim、kruskal<br>const与define区别（C语言）<br>java高级特性<br>银行家算法<br>最短路径算法dijkstra、floyd、spfa、bellman等<br>DB特性<br>各种排序算法和查找算法的复杂度及过程<br>C++堆栈内部机制<br>B+树<br>散列表<br>离散数学<br>缓存机制<br>…………………………<br>（以上问题没有标注“英文”的不代表就是中文）<br>我中午没有去吃饭，自己从苏州带了一些零食暂时解决了一下。中午和周围人聊了一会，备受打击。刚开始听一个湖大（985）的妹子伤心的讲着自己拿了三年国奖专业第一，简历却被清华拒，连面试的机会都没有拿到（我：……）后来她开始叙述她北大面试的经过（我：……）。然后一个帅哥说自己参加了清华面试，暂时还没有收到清华的消息（这里给大家科普一下，清华和北大不会给过面试的学生任何通知，如果你收到了清北的电话最好的情况是你被调剂了，要么就是你被拒了。这种设定我也是第一次听说，毕竟帝都的学校会玩）他们七八个人谈的都是清北复交计算所我也插不进话，在一边保持一脸懵逼状。后来也不知谁突然想起我，问我有没有去清北面试……我：我排名比较靠后，上午估计排不到我了，我先去准备一下面试，以后有机会再聊哈……然后我默默的低下头假装正在背材料，一脸大些的尴尬……之后等985的高才生都走了，放眼望去都是西电的爸爸……<br>浙大的面试会让你抽一张红纸和一张白纸，都是A4纸，红纸是一整页的英文，白纸上一页分了三小段，每段讲的都不一样，在进面试室前你有一个人面试的时间去看完这两张纸，并且不给用手机。我当时抽的红纸上写的是关于数据库的键，主键，候选码，超码等这些概念以及这些概念的区别应用等等；白纸上写的三段分别是排序算法的重要性及优化，哈希表及冲突解决，堆排序过程（建立时排序和二叉树堆排序）<br>等进到面试室里：<br>老师A：What’s your name?<br>老师B：What’s your white paper number and tell us something about the white paper.<br>这是老师最先问我的两个问题，在我给老师解释了一遍白纸上讲了什么之后老师又问了我一些关于哈希表的问题，具体内容我忘了。然后：<br>老师C：Which area are you interested in?(大概这意思，具体怎么问的我也忘了）<br>我：I’m interested in Big data, machine learning, data mining.<br>老师C：Do you have done some research in these areas?<br>我：I have read some books about these areas, like Big Data, Artificial Intelligence And Machine Learning and so on.Also, I have majored a course, Data Warehouse And Data Mining, and I got full grade of 4.0 in the course.（没有做过任何研究的我表示尴尬……）<br>老师D：Since you have learned Data mining……blablabla……you must do well in linear algebra.I’ll ask you one question, what’s the rank in matrix?（等等，我学数据挖掘可没有接触过多少线性代数啊……老师你中间那段说了什么，怎么就扯到线性代数了……）<br>我：When we transform a common matrix into an up triangle matrix, the number of row which has nonzero number is the rank of the matrix.(表示上三角矩阵不会说……事后查了一下上三角矩阵upper triangular matrix)<br>老师D：How to transform a common matrix into an upper triangular matrix?<br>我：First we divide each number in first row by first number in first row, then we multiply the first row with the first number of second line and minus the second row by reult we get just now, aims to let the first number of second row transform into zero.And then the third row, fourth row and so on.After that we use the same method to transform the second number of second<br>row into one and transform each number of second column into zero(except row two).And then third row, fourth row and so on.When the process finished, we have completed the transformation of up triangle matrix.(虽然刚才老师说了一遍，但依然没有学会上三角矩阵的说法)<br>老师D：What promblem would you meet in the process?<br>我：（刚才说的不对吗……怎么会有问题）Do you mean that if the number of the row is larger than the number of column there maybe some question?<br>老师D：Er……maybe not（老师，原来你也不知道……）<br>老师D：You can think for a while.(额，原来是我说错了）<br>经过了大约五秒的尴尬，我：If the x number of x row is zero, we can’t transform it into one by division directly.We should exchange the x row with the other row below.<br>老师D：You are right.<br>虽然我答对了，但是场面陷入了一个更长时间的安静……<br>我先打破了这个尴尬的局面：Should I introduce myself in English or tell some thing about the red paper?（其实我还是很想自我介绍和说一说红纸内容的，一方面我觉得我英语口音还是不错的，其次红纸我都看懂了）<br>老师A：No, you don’t have to.<br>我：……<br>老师E：你说一说归并排序的过程吧。（终于可以不用英文了……）<br>我：（回答了一遍，具体就不说了，大家应该都知道）<br>老师E：归并排序属于什么类型？<br>我：分治<br>老师E：时间复杂度<br>我：nlogn<br>场面又开始安静了……<br>老师F：说一个你做的项目吧<br>我：（我说了我大三上写的java项目，讲了一遍SSM，又说了一遍AOP编程思想，我看到所有老师都是低着头的……所以说项目只能体现你不是手残，老师根本不关心你究竟做了什么……）<br>老师A-F又问了几个简单的问题如你在项目中做了什么，其他人做了什么，数据规模多大，数据库用的什么<br>之后老师就问了问六级过了没有，爱好什么，说我身材不错（谢谢），问我有没有联系浙大的任何老师（没有）<br>最后老师问了我一个问题：你支持法轮功吗？<br>我：……啊？我反对法轮功啊……这是邪教啊……<br>老师：好，你在这里签一下字，然后叫下一位同学进来。<br>我：……<br>签完字后，我：这些材料和简历……<br>老师：你都拿走吧<br>我：……（觉得被嫌弃）<br>老师D：你留一份给我吧，我回去看看，今天晚些时候或者明天我联系你。<br>我：好的，老师请问您贵姓<br>老师D：我姓……叫……（什么什么……关键的一个字都没有听清楚……又不好意思再问一遍……）<br>我：好的，谢谢老师……<br>以上就是我在浙大面试的全过程……<br>另外必须提一下，浙大是第一所没有问我为什么不去南大的学校（估计浙大……身为南京人伤心五秒钟……）<br>第二天早上老师联系我了，并让我去他实验室面谈。大致的过程就是老师说一下自己的具体研究方向，并且再问问你本科情况。老师在谈话的最后说，我觉得挺有潜质的（当然），我当时也给你打了很高的分（谢谢），你面试时问题回答的非常流畅（哈哈），表现的非常的冷静（2333我根本没抱希望怎么可能紧张），就是你本科是211会影响你最后的得分（……又被歧视了），如果你最后过了你可以来联系我，我很欢迎你。面试前后加起来大约一刻钟，然后我就打车去河坊街吃了一下午。其实我在面试完的当天下午还找了另一位老师，研究电子商务、服务计算和大数据的，之所以去找这位老师是因为他的研究所是一个交叉领域的研究所（金融和计算机）。事先我也没有和这位老师有任何联系，直接找到了老师的办公室，直接霸面。结果挺好的，我和他说我本科双学位，计算机+公管，他对我双学位的出生比较感兴趣，之后也给我留了一张名片，让我事后拿到录取通知后联系他，于是我两天后发短信告诉他我被浙大刷掉了……<br>大家都说苏大双学位很水，上过双学位的我告诉大家苏大双学位真的特别水，但是我强烈建议学计算机或者其他理工科出生的牺牲两年的周末修一门文科类的双学位。原因有四：<br>1- 教育本质是当你把在学校里所学到的所有知识全部遗忘后剩下的，教育不是知识，教育是一种熏陶。我在修了一年多的双学位后，我觉得我最大收获是不学会了会计，也不是通晓了凯恩斯主义，更不是掌握菲利普斯曲线或IS-LM等众多模型，而是一种思维方式的转变；<br>2- 理工科生情商普遍偏低（当然不是所有），主动接受熏陶吧；<br>3- 俗话说人不理财，财不理人，虽然在大学大部分人的生活来源依然来自父母，但是作为成年人需要有一些经济独立的意识了，关于金融体系的常识有必要了解一下，双学位是一个很好机会。另外公积金、税率等也是很现实的事，在走出校园前系统的了解一下，等找工作时肯定会用到；<br>4- 当以后有人笑你是工科男或工科女的时候，你可以有效的回击hhhh。<br>其实修双学位文凭不是最重要的，毕竟拿第二学位文凭去找工作本身就不太现实，重要的还是过程。<br>面试结果等了两天，和我预期的一样，没过，差了1.688分（虽然最后我去了浙大，但是我面试真的没过）虽然没有过，但是并没有一丝难过，这应该得益于之前几场面试吧。<br>事后我想了一下为什么没有过，看了一下名单今年浙大录了165个，211占19个（其中西电占15人）和去年相比差不多（155人，非西电211占3人），当初退票的冲动还是对的。后来我也想了想，学校的基础分是我没有办法改变的，在学校里我六学期总评比第一少1分，甩第三20分，第四30分，学校里能拿到的都拿到了，即使我多拿一分成为第一，去年计科的第一不是一样没有过吗……如果有想去浙大学弟学妹要问我们还有什么地方可以再突破一下，我有两点建议：<br>1- 高分的六级会有帮助，必须是高分，因为六级成绩是折算进综合成绩的（浙大非常看重英语成绩以及英语综合能力），当然有高分的雅思托福高级口译等就更好了；<br>2- 如果觉得ACM国家级或国际的奖比较难的话，可以考虑下PAT（具体是什么我也不清楚，只知道这是浙大自己组织的编程竞赛，并且浙大在收取材料时注明了收PAT成绩，想了解自行问度娘吧）</p><h3 id="推免报名"><a href="#推免报名" class="headerlink" title="推免报名"></a>推免报名</h3><p>今年推免注册从9月25日开始，28日可以开始填报志愿。原本打算第一个填报中科大，剩下两个志愿填清华北大玩一玩的，后来想想这种大事还是正经些好。其实我也一直怕多填报一个志愿会影响中科大的录取，虽然按国家规定和中科大之前给出的承诺是不会的。之后经过一番思考决定再填报浙大一次，虽然即使浙大再给我一次面试机会中科大一定在此之前“确认待录取”环节已经结束了<br>整个申请环节大概是这样的：<br>1- 在全国推免系统上填报至多三个平行志愿（有时候填报顺序也会有影响）<br>每个志愿是这样：<br><img src="http://img.blog.csdn.net/20161007205329988" alt="这里写图片描述"><br>填报完之后看到“我的志愿”栏目下是这样：<br><img src="http://img.blog.csdn.net/20161007205358652" alt="这里写图片描述"><br>2- 等待“复试通知”<br><img src="http://img.blog.csdn.net/20161007205421035" alt="这里写图片描述"><br>点开是这样的：<br><img src="http://img.blog.csdn.net/20161007205438231" alt="这里写图片描述"><br>3- 接受“复试通知”<br>这里强调一下<strong>“复试通知”可以确认多个</strong><br><img src="http://img.blog.csdn.net/20161007205451731" alt="这里写图片描述"><br>4- 等待“待录取通知”并确认<br><img src="http://img.blog.csdn.net/20161007205502044" alt="这里写图片描述"><br>这里强调一下<strong>“待录取通知”只能确认一个</strong>，剩下的“待录取通知”你可以不管也可以点拒绝，我点了拒绝<br>在“我的志愿”栏目下看到的应该是这样的<br><img src="http://img.blog.csdn.net/20161007205515404" alt="这里写图片描述"><br>5- 到这一步你的保研之路已经完成了99%，剩下的1%就是接下来一学年不要有挂科，论文不过等导致不能顺利毕业事发生，相信这对能拿到保研资格的人来说不是什么难事。<br>最后再解释一下为什么我最后去了浙大，原因就是有人放弃了名额，我当时差的分不多（1.688），所以浙大电话联系我愿不愿意去（免再面试），当时我还真思考了一整天到底去中科大还是浙大，两边给的条件都差不多。综合考虑了一下感觉中科大毕业后更适合出国发展（USTC的文凭毕竟是世界通行证），浙大毕业后在国内前景比较好（毕竟浙大国内排名排到了第二，不过我觉得这个排名有些过了，只能说稳定在国内前五吧）。最后我还是选择了浙大，一方面我在浙大选择的方向是BI，在中科大选择的方向是大数据隐私安全，相比较而言我对金融领域的研究更感兴趣；其二我选择浙大其实是选择了杭州，西湖的夜景真的很醉人。</p><h2 id="保研建议"><a href="#保研建议" class="headerlink" title="保研建议"></a>保研建议</h2><p>1- 保研尽量保985<br>不是说211不好，但是以后走上社会后很多公司hr不能完全正确看待211和985，211出生会受到偏见和不公平待遇甚至歧视。我个人觉得其实很多211出生的人也是非常优秀的，甚至超过985，但是在面试中不可能让你展示全部的能力，所以偏见再所难免。即使在高校的面试中，身为211出生的我在很多场合就感受到不同程度的轻视，至于是什么样的轻视我就不多说了。所以个人建议克服一下地理位置、生活条件等不利因素，尽量选择一个985学校；</p><p>2- 本科出生，专业排名和GPA是王道<br>无论什么奖学金，项目和社会活动全是浮云（当然特别厉害的项目在面试中老师会感兴趣，如果是网站、安卓、IOS、app建议就别写进简历了……我个人大一大二就是写网站的……相信我，拿出去真的很丢人……）。排名和GPA之外，一般人可能只有英语成绩和论文对你的综合评分有帮助。如果是大神可以有ACM和数学建模，但是建议事先评估一下自己的赛事等级以及获奖等级，不是所有奖都能给自己加分的，有时甚至会起副作用；</p><p>3- 面试非常的重要<br>面试非常的重要，但并不意味着你所有的回答都必须正确，从某种意义上讲即使你全部回答错了也不会影响你面试的得分，可能还会给老师留下深刻的印象。其实面试的问题大多都是表象，老师真正想考察的是学生的性格，思考问题的方式，是否真的有研究的兴趣，是否具有科研潜质，沟通表达能力等等。其实老师也清楚，通过一场面试是无法看清一个学生真实能力的，所以老师们都希望招到的学生以后即使在学术方面不能达到期望，也能在其他方面有所成就。因此那些表现的十分不自信的，举止怪异的，性格激进的，精神不正常，心理有明显阴影，不具备正常表达能力的学生老师一定是不会接收的；</p><p>4- 英语能力非常重要<br>如果说老师一定要通过面试考察学生的某种能力的话，那一定就是英语能力了。西交大面试要抽取一段英文朗读、翻译并回答问题，中科大有实验室要求当场阅读论文，浙大则基本全英文了。为什么英文很重要，我就不多说了；</p><p>5- 找老师人品很重要<br>这个我就不说了，大家应该都懂；</p><p>6- 积极交友<br>虽然你加的那些好友大部分在面试后相互不会再联系了，联系也只不过问问你最后去哪了，你有没有报哪个学校而已，但是这真的很重要。有的时候就是一两条消息会改变你的命运，即使不是这样以后在酒桌饭局上吹吹自己认识一些清北复交中科大的高才生也是好的2333。当然也不排除你会认识一些聊的来的人，这就要靠缘分了。经过4次面试，我也认识了四五个聊的不错的人，还有一批以后将去清北复交中科大中科院以及南大的高才生（觉得自己以后酒桌饭局上有的吹了23333）；</p><p>7- 要求导师明确是否接受<br>学校接受你后都会以各种方式通知你（除了清华北大，下文我会提到帝都学校是怎么玩的），另外也会给你发预录取通知书或者在官网上公示名单。但是导师和你的约定往往很模糊，经常会出现之前说的差不多的，突然老师名额招满了的情况。另外，如果学硕还是专硕是由导师决定的，最好让导师明确告诉你给你的是学硕还是专硕，不要以为和导师说过你想选哪个就保险；</p><p>8- 给自己留退路<br>尽量多争取一些offer，当然也不要盲目的争取，去争取比已有offer更好或者平行学校的offer。当offer多了可以选择性放弃一些，也给其他保研学生一些机会。建议最后填写三个志愿时，一个是你想冲击的学校（没有预录取offer），一个是已拿到最好的offer学校，一个备胎（当上一个志愿出现差池的时候作为保底）。我觉得我南大和西交大拒的有些早，因为在中科大录我后出现了一些意外，中科大把我之前和老师沟通好的专业改了，虽然在经过沟通后中科大招生办撤销并重发了“复试通知”改回了我原来的专业，但是我觉得当时应该给自己多留一条后路；</p><p>9- 各类学校排名只能参考<br>我这里提供一些比较热门的排名方式</p><ul><li>武书连榜单（暂时国内认为最合理的排名方式）<br><a href="http://www.yggk.net/pm/642/" target="_blank" rel="external">http://www.yggk.net/pm/642/</a></li><li>网大榜单<br><a href="http://www.gaokaopai.com/paihang-otype-1.html" target="_blank" rel="external">http://www.gaokaopai.com/paihang-otype-1.html</a></li><li>最新根据ESI的综合排名（看到自己本科母校排在了第25感到非常的荣幸）<br><a href="http://mp.weixin.qq.com/s?__biz=MzA5NTU1NjEwNw==&amp;mid=2650832807&amp;idx=1&amp;sn=43381f4be234e30235d204e614aa04ee&amp;mpshare=1&amp;scene=1&amp;srcid=0924n8It8kAYH8XzWIp2tCEy#rd" target="_blank" rel="external">http://mp.weixin.qq.com/s?__biz=MzA5NTU1NjEwNw==&amp;mid=2650832807&amp;idx=1&amp;sn=43381f4be234e30235d204e614aa04ee&amp;mpshare=1&amp;scene=1&amp;srcid=0924n8It8kAYH8XzWIp2tCEy#rd</a></li></ul><p>10- 没有被录并不完全是实力的问题<br>可能是本科出生绊住了你，也有可能仅仅是运气不好，保研的过程中要相信自己，能够具有保研资格的人都非常优秀。</p><h2 id="报名时间"><a href="#报名时间" class="headerlink" title="报名时间"></a>报名时间</h2><p>以下为2016年部分学校的提前推免面试报名，面试时间及通知，仅供参考</p><h3 id="华东师范大学"><a href="#华东师范大学" class="headerlink" title="华东师范大学"></a>华东师范大学</h3><p>报名时间：04月<br>面试时间：07月14日-16日<br><a href="http://www.yjszs.ecnu.edu.cn/system/xlyxcwb_detail.asp?id=2016031120150075144453" target="_blank" rel="external">http://www.yjszs.ecnu.edu.cn/system/xlyxcwb_detail.asp?id=2016031120150075144453</a></p><h3 id="南京大学-1"><a href="#南京大学-1" class="headerlink" title="南京大学"></a>南京大学</h3><p>报名时间：<br>面试时间：05月14日-15日， 09月04日<br><a href="http://www.yjszs.ecnu.edu.cn/system/xlyxcwb_detail.asp?id=2016031120150075144453" target="_blank" rel="external">http://www.yjszs.ecnu.edu.cn/system/xlyxcwb_detail.asp?id=2016031120150075144453</a></p><h3 id="西安交通大学（需要邮寄材料）"><a href="#西安交通大学（需要邮寄材料）" class="headerlink" title="西安交通大学（需要邮寄材料）"></a>西安交通大学（需要邮寄材料）</h3><p>报名时间：04月-05月<br>面试时间：06月03日-05日<br><a href="http://eiegrad.xjtu.edu.cn/zhaosheng/view/id/39" target="_blank" rel="external">http://eiegrad.xjtu.edu.cn/zhaosheng/view/id/39</a></p><h3 id="中国科学技术大学-1"><a href="#中国科学技术大学-1" class="headerlink" title="中国科学技术大学"></a>中国科学技术大学</h3><p>报名时间：截至至06月22日<br>面试时间：07月17日-23日<br><a href="http://xly.ustc.edu.cn/news.php?newsid=384" target="_blank" rel="external">http://xly.ustc.edu.cn/news.php?newsid=384</a></p><h3 id="武汉大学"><a href="#武汉大学" class="headerlink" title="武汉大学"></a>武汉大学</h3><p>报名时间：5月28日-6月20日<br>面试时间：7月11日-13日<br><a href="http://cs.whu.edu.cn/a/bangongdianhuafabu/2016/0527/6449.html" target="_blank" rel="external">http://cs.whu.edu.cn/a/bangongdianhuafabu/2016/0527/6449.html</a></p><h3 id="华中科技大学"><a href="#华中科技大学" class="headerlink" title="华中科技大学"></a>华中科技大学</h3><p>报名时间：6月10日-23日<br>面试时间：07月21日-23日<br><a href="http://cs.hust.edu.cn/tongzhi/xq?id=10581&amp;type=50" target="_blank" rel="external">http://cs.hust.edu.cn/tongzhi/xq?id=10581&amp;type=50</a></p><h3 id="东南大学"><a href="#东南大学" class="headerlink" title="东南大学"></a>东南大学</h3><p>报名时间：06月23日-09月15日<br>面试时间：08月24日-26日<br><a href="http://cse.seu.edu.cn/CSE/UI/Notice/NoticeView.aspx?notice_id=1659" target="_blank" rel="external">http://cse.seu.edu.cn/CSE/UI/Notice/NoticeView.aspx?notice_id=1659</a></p><h3 id="同济大学"><a href="#同济大学" class="headerlink" title="同济大学"></a>同济大学</h3><p>报名时间：06月16日-28日<br>面试时间：08月28日-31日<br><a href="http://yz.tongji.edu.cn/attach/2016/06/16/13110.pdf" target="_blank" rel="external">http://yz.tongji.edu.cn/attach/2016/06/16/13110.pdf</a></p><h3 id="南大软院"><a href="#南大软院" class="headerlink" title="南大软院"></a>南大软院</h3><p>报名时间：06月<br>面试时间：07月04日， 07月25日-29日<br><a href="http://218.94.159.101/studentView" target="_blank" rel="external">http://218.94.159.101/studentView</a></p><h3 id="浙江大学-1"><a href="#浙江大学-1" class="headerlink" title="浙江大学"></a>浙江大学</h3><p>报名时间：07月27日-09月15日<br>面试时间：09月21日（直博）22日（直硕）<br><a href="http://grs.zju.edu.cn/redir.php?catalog_id=17233&amp;object_id=106305" target="_blank" rel="external">http://grs.zju.edu.cn/redir.php?catalog_id=17233&amp;object_id=106305</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他主动给我发邀请的学校及研究所（供大家参考）：<br>1- 中科院核能安全所夏令营<br><a href="http://www.fds.org.cn/newshows.asp?newsid=1718" target="_blank" rel="external">http://www.fds.org.cn/newshows.asp?newsid=1718</a></p><p>2- 华东师范大学中法联合培养夏令营<br><a href="http://mp.weixin.qq.com/s?__biz=MzAxMjA1MjE0MA==&amp;mid=2650707412&amp;idx=1&amp;sn=8bb2bc171b03acba6ad0ceba2f6d0a17&amp;scene=1&amp;srcid=0621vrfxZruiDX6RO1zFvAAO" target="_blank" rel="external">http://mp.weixin.qq.com/s?__biz=MzAxMjA1MjE0MA==&amp;mid=2650707412&amp;idx=1&amp;sn=8bb2bc171b03acba6ad0ceba2f6d0a17&amp;scene=1&amp;srcid=0621vrfxZruiDX6RO1zFvAAO</a></p><p>3- 西安交通大学“叶凯青年科学家工作室”</p><p>国内其他计算机专业顶尖的学校：<br>1- 清北<br>关于清北，我所有的了解都是从其他夏令营中大家谈话间了解到的。清北我没投过简历，决定为国家节省一些纸张。据说清北面试资格只给C9和计算机强校的前几名以及其他985学校的专业第一，211只接待西电和北邮。关于以上说法我也不知道真的假的；</p><p>2- 国防科技大学<br>国内计算机专业常年前三，但是很少有人听说过的学校，我对其也没有任何了解，据说生活条件非常艰苦；</p><p>3- 北航<br>虽然北航学校排名不是很突出，但是计算机全国前五，仅次于清北和国防科技大。我没有给这所学校投过简历，不过在中科大我听说很多人都有被北航刷的经历。另外听说北航是不报销路费的，而且机试和面试都是收费的……</p><p>4- 中科院计算所<br>这个地方是我后来听说的，而且据说非常的厉害，在我认识的人中有放弃中科大或南大去中科院计算所的不止个位数，这也是211可以尝试的地方（中科院本身双非）；</p><p>5- 哈工大<br>这是一所计算机非常厉害的学校，但是地理位置非常不好，我没有了解过这所学校；</p><p>6- 复旦和上交<br>至于复旦和上交，我觉得苏大出身是可以尝试的，我在其他学校有遇到过非西电211出身被复旦录取的。交大计算机在排名常年没有北航前，更不用说复旦，但是毕竟学校名气非常的响，所以竞争激烈程度一样非常的大。复旦和上交我没有投过简历，听说机试很难，有能力的话可以去试试。</p><p>这是2016年国内关于计算机专业的高校排名，仅供参考<br><a href="http://www.dxsbb.com/news/1797.html" target="_blank" rel="external">http://www.dxsbb.com/news/1797.html</a></p><p>如果苏大的学弟学妹需要更详细的信息（如QQ交流群， 学校招生群， 2016推免面试详细日程表， 招生办老师邮箱等）可以加我微信：OuIsWeiCheng（第三个字母是大写的i）</p><h2 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h2><p>这篇博客写给我自己，也写给需要参考的学弟学妹，祝所有人都能保上自己心仪的学校并找到一个适合自己的导师。</p><h2 id="特别致谢"><a href="#特别致谢" class="headerlink" title="特别致谢"></a>特别致谢</h2><p>以下按姓氏排序，与主次无关<br>陈ZhenYu（NJU）<br>韩YueHui（SU）<br>韩XX（XJTU）<br>李Ming（ZJU）<br>齐Qi（USTC）<br>苏Kai（SEU）<br>魏HuiHui（NJU）<br>魏Tong（NJU）<br>徐Fang（USTC）<br>张Lan（USTC）<br>朱Yong（USTC）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近一段时间经常有人问我保研去了哪里，我一直都在含糊其辞，也说了一些谎话（如在考虑包内还是保外；保外只是报名了，最终结果还不知道）。对于大家的关心我先表示衷心的感谢，然后我想对我说过的这些谎话表示一下抱歉，我这么说首先是因为本人喜欢低调，不喜欢成为别人嘴里日常的话题，其实我
      
    
    </summary>
    
      <category term="Life-Events" scheme="http://yoursite.com/categories/Life-Events/"/>
    
    
      <category term="保研" scheme="http://yoursite.com/tags/%E4%BF%9D%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>Big Data Is Just Frame</title>
    <link href="http://yoursite.com/2016/08/03/Big-Data-Is-Just-Frame/"/>
    <id>http://yoursite.com/2016/08/03/Big-Data-Is-Just-Frame/</id>
    <published>2016-08-03T12:45:02.000Z</published>
    <updated>2017-09-22T04:44:53.725Z</updated>
    
    <content type="html"><![CDATA[<p>In contemporary society, big data is one of the hottest topics all over the world.I recommend a book named Big Data, writen by Viktor Mayer-Schonberger and Kenneth Cukier, that I have read several months ago.As the authors reference in the book, big data is a revolution that will transform how we live, work and think, not so long as many people think big data is a new computer-involved technology.The latter is too narrow, even to a computer engineer.Distinguishing from traditional data, big data has three features.First of all, the datum we get are not based on sampling survey, insteading based on whole datum we can reach.Secondly, we have not to promise the datum in sample are completely correct any more.Last but not least, we pay more attention to the association among events and never obsess over the factors cause the association.Give an example, when we apply big data thoughts in medical treatment, instead of traditional sampling survey, we needn’t to check millions or billions of datum and correct all the false datum or try to fill every blank attributes.We sacrifice some accuracy and exchange for an expansion of sample in orders of magnitude.Basing on the size of sample, we are able to abandon the method that we used called supervised learning and replace it by probability statistics, which will help us to find much more valuable association that seemingly have nothing to do with each other.On the other hand, when we divide a sample, which has ten billion datum, by ten attributes and each attribute has ten different possible values.We can easily get that, the average number of each sample interval is ten.It is ridiculous to draw a conclusion basing on a sample with such tiny size because the size is absolutely unrepresentative.What’s more, the preference of investigators will influence the component of sample in some way.</p><p>When it simply comes to computer science, big data is also not one technique.It is a frame, which needs many techniques to support, and we would achieve different value when we fill the frame with different material.Here are some skills that a big data engineer must master. </p><h3 id="Basic-Knowledge"><a href="#Basic-Knowledge" class="headerlink" title="Basic Knowledge"></a>Basic Knowledge</h3><p>1    MSE(Mean Square Error)<br>2    LMS(Least Mean Square)<br>3    LSM(Least Square Methods)<br>4    MLE(MaximumLikelihood Estimation)<br>5    QP(Quadratic Programming)<br>6    CP(Conditional Probability)<br>7    JP(Joint Probability)<br>8    MP(Marginal Probability)<br>9    Bayesian Formula<br>10    L1 /L2Regularization<br>11    GD(GradientDescent)<br>12    SGD(Stochastic Gradient Descent)<br>13    Eigenvalue<br>14    Eigenvector<br>15    QR-decomposition<br>16    Quantile<br>17    Covariance<br>18    Matrix Calculation    </p><h3 id="Discrete-Distribution"><a href="#Discrete-Distribution" class="headerlink" title="Discrete Distribution"></a>Discrete Distribution</h3><p>19    BernoulliDistribution/Binomial<br>20    Negative BinomialDistribution<br>21    MultinomialDistribution<br>22    Geometric Distribution<br>23    HypergeometricDistribution<br>24    Poisson Distribution</p><h3 id="Continuous-Distribution"><a href="#Continuous-Distribution" class="headerlink" title="Continuous Distribution"></a>Continuous Distribution</h3><p>25    UniformDistribution<br>26    Normal Distribution /Guassian Distribution<br>27    ExponentialDistribution<br>28    Lognormal Distribution<br>29    Gamma Distribution<br>30    Beta Distribution<br>31    Dirichlet Distribution<br>32    Rayleigh Distribution<br>33    Cauchy Distribution<br>34    Weibull Distribution</p><h3 id="Three-Sampling-Distribution"><a href="#Three-Sampling-Distribution" class="headerlink" title="Three Sampling Distribution"></a>Three Sampling Distribution</h3><p>35    Chi-square Distribution<br>36    t-distribution<br>37    F-distribution</p><h3 id="Data-Pre-processing"><a href="#Data-Pre-processing" class="headerlink" title="Data Pre-processing"></a>Data Pre-processing</h3><p>39    Missing Value Imputation<br>40    Discretization Mapping<br>41    Normalization</p><h3 id="Sampling"><a href="#Sampling" class="headerlink" title="Sampling"></a>Sampling</h3><p>42    Simple Random Sampling<br>43    OfflineSampling<br>44    Online Sampling<br>45    Ratio-based Sampling<br>46    Acceptance-RejectionSampling<br>47    Importance Sampling<br>48    MCMC(MarkovChain Monte Carlo：Metropolis-Hasting&amp; Gibbs)    </p><h3 id="Optimization"><a href="#Optimization" class="headerlink" title="Optimization"></a>Optimization</h3><p>49    Lagrange mutipliers<br>50    Non-constrainedOptimization<br>51    Cyclic VariableMethods<br>52    Pattern Search Methods<br>53    VariableSimplex Methods<br>54    Gradient Descent Methods<br>55    Newton Methods<br>56    Quasi-NewtonMethods<br>57    Conjugate Gradient Methods</p><h3 id="ConstrainedOptimization"><a href="#ConstrainedOptimization" class="headerlink" title="ConstrainedOptimization"></a>ConstrainedOptimization</h3><p>58    Approximation Programming Methods<br>59    FeasibleDirection Methods<br>60    Penalty Function Methods<br>61    Multiplier Methods<br>62    Heuristic Algorithm<br>63    SA(SimulatedAnnealing)<br>64    GA(genetic algorithm)</p><h3 id="Similarity-Measure-amp-Distance-Measure"><a href="#Similarity-Measure-amp-Distance-Measure" class="headerlink" title="Similarity Measure&amp;Distance Measure"></a>Similarity Measure&amp;Distance Measure</h3><p>65    Euclidean Distance<br>66    ManhattanDistance<br>67    Chebyshev Distance<br>68    MinkowskiDistance<br>69    Standardized Euclidean Distance<br>70    MahalanobisDistance<br>71    Cos(Cosine)<br>72    HammingDistance/Edit Distance<br>73    JaccardDistance<br>74    Correlation Coefficient Distance<br>75    InformationEntropy<br>76    KL(Kullback-Leibler Divergence/Relative Entropy)    </p><h3 id="Data-Structure"><a href="#Data-Structure" class="headerlink" title="Data Structure"></a>Data Structure</h3><p>77    Stack、Queue、List<br>78    Hash Table<br>79    Binary Tree、Red Black Tree、B Tree<br>80    Graph</p><h3 id="Common-Algorithm"><a href="#Common-Algorithm" class="headerlink" title="Common Algorithm"></a>Common Algorithm</h3><p>81    Sort<br>82    Maximum Sub Array<br>83    Maximum Common Sub Sequence<br>84    Minimal Spanning Tree<br>85    Shortest Path<br>86    The Storage And Computation Of Matrix</p><h3 id="Consistency-Algorithm-Distributed-Theory"><a href="#Consistency-Algorithm-Distributed-Theory" class="headerlink" title="Consistency Algorithm (Distributed Theory)"></a>Consistency Algorithm (Distributed Theory)</h3><p>87    Paxos<br>88    Raft<br>89    Gossip</p><h3 id="Clustering"><a href="#Clustering" class="headerlink" title="Clustering"></a>Clustering</h3><p>90    K-Means<br>91    K-Mediods<br>92    Binary K-Means    2<br>93    FK-Means<br>94    Canopy<br>95    Spectral-KMeans<br>96    GMM-EM<br>97    K-PototypesCLARANS<br>98    BIRCH<br>99    CURE<br>100    DBSCAN<br>101    CLIQUE</p><h3 id="Classification-amp-Regression"><a href="#Classification-amp-Regression" class="headerlink" title="Classification&amp;Regression"></a>Classification&amp;Regression</h3><p>102    LR(Linear Regression)<br>103    LR(LogisticRegression)<br>104    SR(Softmax Regression)<br>105    GLM(GeneralizedLinear Model)<br>106    RR(Ridge Regression)<br>107    LASSO(Least Absolute Shrinkage andSelectionator Operator)<br>108    RF<br>109    DT(DecisionTree)<br>110    GBDT(Gradient BoostingDecision Tree)<br>111    CART(ClassificationAnd Regression Tree)<br>112    KNN(K-Nearest Neighbor)<br>113    SVM(Support VectorMachine)<br>114    KF Kernel Function/PolynomialKernel Function<br>115    Guassian KernelFunction/Radial BasisFunction RBF<br>116    String KernelFunction<br>117    NB(Naive Bayes)BN(Bayesian Network/Bayesian Belief Network/ Belief Network)<br>118    LDA(Linear Discriminant Analysis/FisherLinear Discriminant)<br>119    EL(Ensemble Learning BoostingBaggingStacking)<br>120    AdaBoost(Adaptive Boosting)<br>121    MEM(MaximumEntropy Model)</p><h3 id="Effectiveness-Evaluation"><a href="#Effectiveness-Evaluation" class="headerlink" title="Effectiveness Evaluation"></a>Effectiveness Evaluation</h3><p>122    Confusion Matrix<br>123    Precision Recall<br>124    Accuracy F-score<br>125    ROC Curve AUC<br>126    LiftCurve KS Curve</p><h3 id="PGM-Probabilistic-Graphical-Models"><a href="#PGM-Probabilistic-Graphical-Models" class="headerlink" title="PGM(Probabilistic Graphical Models)"></a>PGM(Probabilistic Graphical Models)</h3><p>127    BN(Bayesian Network/Bayesian Belief Network/ BeliefNetwork)<br>128    MC(Markov Chain)<br>129    HMM(HiddenMarkov Model)<br>130    MEMM(Maximum Entropy Markov Model)<br>131    CRF(ConditionalRandom Field)<br>132    MRF(MarkovRandom Field)</p><h3 id="NN-Neural-Network"><a href="#NN-Neural-Network" class="headerlink" title="NN(Neural Network)"></a>NN(Neural Network)</h3><p>133 ANN(Artificial Neural Network)<br>134    BP(Error BackPropagation)</p><h3 id="Deep-Learning"><a href="#Deep-Learning" class="headerlink" title="Deep Learning"></a>Deep Learning</h3><p>135    Auto-encoder<br>136    SAE(Stacked Auto-encoders)<br>137    Sparse Auto-encoders<br>138    Denoising Auto-encoders<br>139    Contractive Auto-encoders<br>140    RBM(RestrictedBoltzmann Machine)<br>141    DBN(Deep Belief Network)<br>142    CNN(ConvolutionalNeural Network)<br>143    Word2Vec</p><h3 id="Dimensionality-Reduction"><a href="#Dimensionality-Reduction" class="headerlink" title="Dimensionality Reduction"></a>Dimensionality Reduction</h3><p>144    LDA LinearDiscriminant Analysis/Fisher Linear Discriminant/Fisher<br>145    PCA(Principal Component Analysis)<br>146    ICA(IndependentComponent Analysis)<br>147    SVD(Singular Value Decomposition)<br>148    FA(FactorAnalysis)</p><h3 id="Text-Mining"><a href="#Text-Mining" class="headerlink" title="Text Mining"></a>Text Mining</h3><p>149    VSM(Vector Space Model)<br>150    Word2Vec<br>151    TF(Term Frequency)<br>152    TF-IDF(Term Frequency-Inverse DocumentFrequency)<br>153    MI(MutualInformation)<br>154    ECE(Expected Cross Entropy)<br>155    QEMI<br>156    IG(InformationGain)<br>157    IGR(Information Gain Ratio)<br>158    Gini<br>159    x2 Statistic<br>160    TEW(TextEvidence Weight)<br>161    OR(Odds Ratio)<br>162    N-Gram Model    3<br>163    LSA(Latent Semantic Analysis)<br>164    PLSA(ProbabilisticLatent Semantic Analysis)<br>165    LDA(Latent DirichletAllocation)</p><h3 id="Association-Mining"><a href="#Association-Mining" class="headerlink" title="Association Mining"></a>Association Mining</h3><p>166    Apriori<br>167    FP-growth(Frequency Pattern Tree Growth)<br>168    AprioriAll<br>169    Spade</p><h3 id="Recommendation-Engine"><a href="#Recommendation-Engine" class="headerlink" title="Recommendation Engine"></a>Recommendation Engine</h3><p>170    DBR(Demographic-based Recommendation)<br>171    CBR(Context-basedRecommendation)<br>172    CF(Collaborative Filtering)<br>173    UCF(User-basedCollaborative Filtering Recommendation)<br>174    ICF(Item-basedCollaborative Filtering Recommendation)</p><h3 id="Feature-Selection"><a href="#Feature-Selection" class="headerlink" title="Feature Selection"></a>Feature Selection</h3><p>175    Mutual Information<br>176    DocumentFrequence<br>177    Information Gain<br>178    Chi-squared Test<br>179    Gini    </p><h3 id="Outlier-Detection"><a href="#Outlier-Detection" class="headerlink" title="Outlier Detection"></a>Outlier Detection</h3><p>180    Statistic-based<br>181    Distance-based<br>182    Density-based<br>183    Clustering-based</p><h3 id="Learning-to-Rank"><a href="#Learning-to-Rank" class="headerlink" title="Learning to Rank"></a>Learning to Rank</h3><p>184 Pointwise：McRank<br>185    Pairwise：RankingSVM，RankNet，Frank，RankBoost<br>186    Listwise：AdaRank，SoftRank，LamdaMART        </p><h3 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h3><p>187    Matlab<br>188    TensorFlow<br>189    Spark Mllib        </p><h3 id="Processing-Platform"><a href="#Processing-Platform" class="headerlink" title="Processing Platform"></a>Processing Platform</h3><p>190    Hadoop<br>191    Spark<br>192    Weka<br>193    Flink</p><h3 id="Data-Warehouse-And-Data-Analysis-SQL"><a href="#Data-Warehouse-And-Data-Analysis-SQL" class="headerlink" title="Data Warehouse And Data Analysis (SQL)"></a>Data Warehouse And Data Analysis (SQL)</h3><p>194    Pig<br>195    Hive<br>196    Spark SQL<br>197    ElasticSearch</p><h3 id="Message-Queue"><a href="#Message-Queue" class="headerlink" title="Message Queue"></a>Message Queue</h3><p>198    Kafka</p><h3 id="Stream-Computing"><a href="#Stream-Computing" class="headerlink" title="Stream Computing"></a>Stream Computing</h3><p>199    Storm<br>200    Spark Streaming</p><h3 id="Programming-Language"><a href="#Programming-Language" class="headerlink" title="Programming Language"></a>Programming Language</h3><p>201    Java<br>202    Python<br>203    R</p><h3 id="Data-Visualization"><a href="#Data-Visualization" class="headerlink" title="Data Visualization"></a>Data Visualization</h3><p>204 D3.js</p><p>Here is one system structure diagram that I think will help reader to understand the big data frame.<br><img src="http://img.blog.csdn.net/20161004112147614" alt="这里写图片描述"><img src="http://img.blog.csdn.net/20161004112202130" alt="这里写图片描述"><img src="http://img.blog.csdn.net/20161004112212005" alt="这里写图片描述"></p><p>Email me if you want the orginal diagram.(callouweicheng@gmail.com)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;In contemporary society, big data is one of the hottest topics all over the world.I recommend a book named Big Data, writen by Viktor May
      
    
    </summary>
    
      <category term="Notes" scheme="http://yoursite.com/categories/Notes/"/>
    
    
      <category term="Big Data" scheme="http://yoursite.com/tags/Big-Data/"/>
    
  </entry>
  
  <entry>
    <title>My First Web Crawler</title>
    <link href="http://yoursite.com/2016/07/11/My-First-Web-Crawler/"/>
    <id>http://yoursite.com/2016/07/11/My-First-Web-Crawler/</id>
    <published>2016-07-11T13:38:26.000Z</published>
    <updated>2017-09-22T04:44:49.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><p>Get all the titles and urls of my blogs.</p><h2 id="Design"><a href="#Design" class="headerlink" title="Design"></a>Design</h2><p><img src="http://img.blog.csdn.net/20160724170353239" alt="这里写图片描述"></p><p>Firstly, the Crawler needs one controller(WebCrawler) to scheme the itself.The controller sends the root url to the urlManager.Then judges whether there is any url in the set.If the set is not empty, Crawler pops one from the set.Crawler downloads the web page of the given url, and sends the content to the parser.The parser returns what we what.If the set is not null, Crawler do what we have done before again.</p><p>urlManager gets all list page by root url and add them to new_urls(set).If the controller pop one url, urlManager move the url from new_urls(set) to old_urls(set).Also urlManager has methods of has_new_url and get_new_url.</p><p>htmlDownLoader download the web page of the given url.</p><p>htmlParser help us to grab useful infomation.We should tell where the infomation is(locate by tabel and the label’s id, class and other attributes).At last the parser returns what we want on the page we given.</p><p>Finally, the Crawler needs to present the result.Everytime when parser returns any datum, htmlOutputer adds them to its list.When all the urls in the set are used, htmlOutputer prints all the datum in one html file.We can open the file in Firefox and check the result.</p><h2 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h2><p><img src="http://img.blog.csdn.net/20160724170717688" alt="这里写图片描述"></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><h3 id="WebCrawler-py"><a href="#WebCrawler-py" class="headerlink" title="WebCrawler.py"></a>WebCrawler.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf8</span></div><div class="line"><span class="keyword">import</span> htmlDownLoader</div><div class="line"><span class="keyword">import</span> htmlOutputer</div><div class="line"><span class="keyword">import</span> htmlParser</div><div class="line"><span class="keyword">import</span> urlManager</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Controller</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.urls = urlManager.UrlManager()</div><div class="line">        self.downloader = htmlDownLoader.HtmlDownloader()</div><div class="line">        self.parser = htmlParser.HtmlParser()</div><div class="line">        self.outputer = htmlOutputer.HtmlOutputer()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">craw</span><span class="params">(self, root_url)</span>:</span></div><div class="line">        count = <span class="number">1</span></div><div class="line">        self.urls.add_new_urls(root_url)</div><div class="line">        <span class="keyword">while</span> self.urls.has_new_url():</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                new_url = self.urls.get_new_url()</div><div class="line">                <span class="keyword">print</span> <span class="string">"craw %d : %s"</span> % (count, new_url)</div><div class="line">                html_cont = self.downloader.download(new_url)</div><div class="line">                new_datum = self.parser.parse(new_url, html_cont)</div><div class="line">                self.outputer.collect_data(new_datum)</div><div class="line"></div><div class="line">                count += <span class="number">1</span></div><div class="line"></div><div class="line">            <span class="keyword">except</span>:</div><div class="line">                <span class="keyword">print</span> <span class="string">"craw failed : %s"</span> % (new_url)</div><div class="line"></div><div class="line">        self.outputer.output_html()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ ==  <span class="string">"__main__"</span>:</div><div class="line">    root_url = <span class="string">"http://blog.callouweicheng.cn/"</span></div><div class="line">    obj_spider = Controller()</div><div class="line">    obj_spider.craw(root_url)</div></pre></td></tr></table></figure><h3 id="urlManager-py"><a href="#urlManager-py" class="headerlink" title="urlManager.py"></a>urlManager.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf8</span></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"><span class="keyword">import</span> htmlDownLoader</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlManager</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.new_urls = set()</div><div class="line">        self.old_urls = set()</div><div class="line">        self.downloader = htmlDownLoader.HtmlDownloader()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_new_url</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> len(self.new_urls) != <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_new_url</span><span class="params">(self)</span>:</span></div><div class="line">        new_url = self.new_urls.pop()</div><div class="line">        self.old_urls.add(new_url)</div><div class="line">        <span class="keyword">return</span> new_url</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_urls</span><span class="params">(self, root_url)</span>:</span></div><div class="line">        <span class="keyword">if</span> root_url <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line"></div><div class="line">        html_cont = self.downloader.download(root_url)</div><div class="line">        <span class="keyword">if</span> html_cont <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line"></div><div class="line">        soup = BeautifulSoup(html_cont, <span class="string">"html.parser"</span>, from_encoding=<span class="string">"utf-8"</span>)</div><div class="line">        <span class="comment"># &lt;a class ="page-number" href="/page/2/"&gt; 2 &lt;/ a&gt;</span></div><div class="line">        nums = soup.find_all(<span class="string">"a"</span>, class_=<span class="string">"page-number"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            endNum = num.get_text()</div><div class="line"></div><div class="line">        self.new_urls.add(root_url)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, int(endNum)+<span class="number">1</span>):</div><div class="line">            self.new_urls.add(<span class="string">"http://tonyzhang94.github.io/page/"</span>+str(i))</div></pre></td></tr></table></figure><h3 id="htmlDownLoader-py"><a href="#htmlDownLoader-py" class="headerlink" title="htmlDownLoader.py"></a>htmlDownLoader.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf8</span></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlDownloader</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(self, url)</span>:</span></div><div class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">        response = urllib2.urlopen(url)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> response.getcode() != <span class="number">200</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> response.read()</div></pre></td></tr></table></figure><h3 id="htmlParser-py"><a href="#htmlParser-py" class="headerlink" title="htmlParser.py"></a>htmlParser.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf8</span></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlParser</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, page_url, html_cont)</span>:</span></div><div class="line">        <span class="keyword">if</span> page_url <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> html_cont <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line"></div><div class="line">        soup = BeautifulSoup(html_cont, <span class="string">"html.parser"</span>, from_encoding = <span class="string">"utf-8"</span>)</div><div class="line">        new_data = self._get_new_data(page_url, soup)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> new_data</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_data</span><span class="params">(self, page_url, soup)</span>:</span></div><div class="line">        res_data = list()</div><div class="line"></div><div class="line">        <span class="comment"># &lt;a class="post-title-link" href="/2016/05/17/Generating-function-Implements：Credits-Combination/" itemprop="url"&gt;</span></div><div class="line">        <span class="comment"># Generating Function Implements：Credits Combination</span></div><div class="line">        <span class="comment"># &lt;/a&gt;</span></div><div class="line">        titles = soup.find_all(<span class="string">"a"</span>, class_=<span class="string">"post-title-link"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> title <span class="keyword">in</span> titles:</div><div class="line">            data = &#123;&#125;</div><div class="line">            data[<span class="string">"url"</span>] = <span class="string">"http://tonyzhang94.github.iotitle"</span> + title[<span class="string">"href"</span>]</div><div class="line">            data[<span class="string">"title"</span>] = title.get_text()</div><div class="line">            res_data.append(data)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> res_data</div></pre></td></tr></table></figure><h3 id="htmlOutputer-py"><a href="#htmlOutputer-py" class="headerlink" title="htmlOutputer.py"></a>htmlOutputer.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf8</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlOutputer</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.datas = []</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">output_html</span><span class="params">(self)</span>:</span></div><div class="line">        fout = open(<span class="string">"output.html"</span>, <span class="string">"w"</span>)</div><div class="line"></div><div class="line">        fout.write(<span class="string">"&lt;html&gt;"</span>)</div><div class="line">        fout.write(<span class="string">"&lt;body&gt;"</span>)</div><div class="line">        fout.write(<span class="string">"&lt;table&gt;"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> self.datas:</div><div class="line">            fout.write(<span class="string">"&lt;tr&gt;"</span>)</div><div class="line">            fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">"url"</span>].encode(<span class="string">"utf-8"</span>))</div><div class="line">            fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">"title"</span>].encode(<span class="string">"utf-8"</span>))</div><div class="line">            fout.write(<span class="string">"&lt;/tr&gt;"</span>)</div><div class="line"></div><div class="line">        fout.write(<span class="string">"&lt;/table&gt;"</span>)</div><div class="line">        fout.write(<span class="string">"&lt;/body&gt;"</span>)</div><div class="line">        fout.write(<span class="string">"&lt;/html&gt;"</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">collect_data</span><span class="params">(self, datum)</span>:</span></div><div class="line">        <span class="keyword">if</span> datum <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> datum:</div><div class="line">            self.datas.append(data)</div></pre></td></tr></table></figure><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Run WebCrawler in IDE（here is pycharm）<br><img src="http://img.blog.csdn.net/20160724170418044" alt="这里写图片描述"></p><p>Open output.html in Firefox<br><img src="http://img.blog.csdn.net/20160724170448201" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Target&quot;&gt;&lt;a href=&quot;#Target&quot; class=&quot;headerlink&quot; title=&quot;Target&quot;&gt;&lt;/a&gt;Target&lt;/h2&gt;&lt;p&gt;Get all the titles and urls of my blogs.&lt;/p&gt;
&lt;h2 id=&quot;D
      
    
    </summary>
    
      <category term="Crawler" scheme="http://yoursite.com/categories/Crawler/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Generating Function With Constrains</title>
    <link href="http://yoursite.com/2016/05/17/Generating-Function-With-Constrains/"/>
    <id>http://yoursite.com/2016/05/17/Generating-Function-With-Constrains/</id>
    <published>2016-05-17T13:11:24.000Z</published>
    <updated>2017-09-22T04:44:51.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>There are five kinds of coins， valuing 1， 5， 10， 25， 50.Given a integer and use these five kinds of coins to conbine.Each kind of coins is infinit but the sum of coins to sum up the integer mustn’t exceeding 100.Futhermore, the given integer is smaller than 250.The question is that how many methods we can sum up the integer with the five kinds of coins.</p><h2 id="Input-Formal"><a href="#Input-Formal" class="headerlink" title="Input Formal"></a>Input Formal</h2><p>There is one integer each line represents the value we want to sum up.</p><h2 id="Implements"><a href="#Implements" class="headerlink" title="Implements"></a>Implements</h2><p>we should add one demension to record the number of methods in each condition with different num of coins and add a loop to limit the num of coins.<br>At the end of the program， we should sum up the num of methods with different num of coins but having the same value.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Title：Generating Function</span></div><div class="line"><span class="comment">// Author：Call偶围城  </span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> POWER 250</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NCOINS 5</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> c1[POWER+<span class="number">1</span>][MAX+<span class="number">1</span>], c2[POWER+<span class="number">1</span>][MAX+<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> table[POWER+<span class="number">1</span>];</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> coins[NCOINS+<span class="number">1</span>] = &#123;</div><div class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">25</span>, <span class="number">50</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitTable</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> i, j, k, u, v;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt;= POWER;i++) </div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= MAX;j++)</div><div class="line">c1[i][j] = c2[i][j] = <span class="number">0</span>;</div><div class="line"></div><div class="line">c1[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;i &lt;= NCOINS;i++) &#123; </div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= POWER;j++) </div><div class="line"><span class="keyword">for</span> (k = <span class="number">0</span>;k*coins[i]+j &lt;= POWER;k++)</div><div class="line"></div><div class="line"><span class="comment">// constrains：the number of coins mustn't exceed 100</span></div><div class="line"><span class="keyword">for</span> (u = <span class="number">0</span>;u+k &lt;= MAX;u++)</div><div class="line">c2[j+k*coins[i]][k+u] += c1[j][u];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= POWER;j++) &#123;</div><div class="line"><span class="keyword">for</span> (k = <span class="number">0</span>;k &lt;= MAX;k++) &#123;</div><div class="line">c1[j][k] = c2[j][k];</div><div class="line">c2[j][k] = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">table[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;i &lt;= POWER;i++) &#123;</div><div class="line">table[i] = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= POWER;j++)</div><div class="line">table[i] += c1[i][j];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"></div><div class="line">InitTable();</div><div class="line"></div><div class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF) &#123;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, table[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a>Samples</h2><p><strong>Inputs：</strong><br>0<br>11<br>26<br>50<br>100<br>200<br>249<br>250</p><p><strong>Outputs：</strong><br>1<br>12<br>39<br>149<br>803<br>5135<br>7347<br>3830</p><h2 id="Traditional-Methods"><a href="#Traditional-Methods" class="headerlink" title="Traditional Methods"></a>Traditional Methods</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Title：Enumeration</span></div><div class="line"><span class="comment">// Author：Call偶围城  </span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> m[<span class="number">5</span>] = &#123;</div><div class="line"><span class="number">50</span>, <span class="number">25</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">1</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> i, j, k, u, v;</div><div class="line"><span class="keyword">int</span> sum;</div><div class="line"></div><div class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span> ,&amp;n) != EOF) &#123;</div><div class="line"><span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</div><div class="line">sum = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span> (i = n/m[<span class="number">0</span>];i &gt;= <span class="number">0</span>;i--)</div><div class="line"><span class="keyword">for</span> (j = (n-i*m[<span class="number">0</span>])/m[<span class="number">1</span>];j &gt;= <span class="number">0</span>;j--)</div><div class="line"><span class="keyword">for</span> (k = (n-i*m[<span class="number">0</span>]-j*m[<span class="number">1</span>])/m[<span class="number">2</span>];k &gt;= <span class="number">0</span>;k--)</div><div class="line"><span class="keyword">for</span> (u = (n-i*m[<span class="number">0</span>]-j*m[<span class="number">1</span>]-k*m[<span class="number">2</span>])/m[<span class="number">3</span>];u &gt;= <span class="number">0</span>;u--)</div><div class="line"><span class="keyword">if</span> (i+j+k+u+(n-i*m[<span class="number">0</span>]-j*m[<span class="number">1</span>]-k*m[<span class="number">2</span>]-u*m[<span class="number">3</span>])/m[<span class="number">4</span>] &lt;= <span class="number">100</span>)</div><div class="line">sum++;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">sum = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;There are five kinds of coins， valuing 1， 5， 10， 2
      
    
    </summary>
    
      <category term="Combinatorial Mathematics" scheme="http://yoursite.com/categories/Combinatorial-Mathematics/"/>
    
    
      <category term="Generating" scheme="http://yoursite.com/tags/Generating/"/>
    
  </entry>
  
  <entry>
    <title>Generating Function Implements：Credits Combination</title>
    <link href="http://yoursite.com/2016/05/17/Generating-function-Implements%EF%BC%9ACredits-Combination/"/>
    <id>http://yoursite.com/2016/05/17/Generating-function-Implements：Credits-Combination/</id>
    <published>2016-05-17T09:02:40.000Z</published>
    <updated>2017-09-22T04:44:52.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Statistics the number of conbination that can achieve n credits.</p><h2 id="Input-Formal"><a href="#Input-Formal" class="headerlink" title="Input Formal"></a>Input Formal</h2><p>The first line includes one integer represents the number of cases;<br>The first line in each case has two integers n， k， n represents the total credits you will learn and k represents the courses you can choose.Assuming that the courses with same credits have no differences;<br>each line of the k lines below has two integers, the first integer，a ， represents the credits of the course and the second integer， b， represents there are b courses with a credits that you can choose.</p><h2 id="Implements"><a href="#Implements" class="headerlink" title="Implements"></a>Implements</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Title：Generating Function</span></div><div class="line"><span class="comment">// Author：Call偶围城</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSCORE 40 </span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSUB 8</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> T;</div><div class="line"><span class="keyword">int</span> n, kk;</div><div class="line"><span class="keyword">int</span> a[MAXSUB], b[MAXSUB];</div><div class="line"></div><div class="line"><span class="keyword">int</span> i, j, k;</div><div class="line"><span class="keyword">int</span> c1[MAXSCORE+<span class="number">1</span>], c2[MAXSCORE+<span class="number">1</span>];</div><div class="line"></div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</div><div class="line"><span class="keyword">while</span> (T--) &#123;</div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;kk);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt;= MAXSCORE;i++)</div><div class="line">c1[i] = c2[i] = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; kk;i++)</div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt;= a[<span class="number">0</span>]*b[<span class="number">0</span>] &amp;&amp; i &lt;= n;i+=a[<span class="number">0</span>])</div><div class="line">c1[i] = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;i &lt; kk;i++) &#123;</div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= n;j++)</div><div class="line"><span class="keyword">for</span> (k = <span class="number">0</span>;k &lt;= a[i]*b[i] &amp;&amp; k+j &lt;= n;k+=a[i])</div><div class="line">c2[k+j] += c1[j];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= n;j++) &#123;</div><div class="line">c1[j] = c2[j];</div><div class="line">c2[j] = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, c1[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h2><p><strong>Input：</strong><br>2<br>2 2<br>1 2<br>2 1<br>40 8<br>1 1<br>2 2<br>3 2<br>4 2<br>5 8<br>6 9<br>7 6<br>8 8</p><p><strong>Output：</strong><br>2<br>445</p><h2 id="Traditional-Method"><a href="#Traditional-Method" class="headerlink" title="Traditional Method"></a>Traditional Method</h2><pre><code class="C"><span class="comment">// Title：Enumeration</span><span class="comment">// Author：Call偶围城</span><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span><span class="meta">#<span class="meta-keyword">define</span> MAX 8</span><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{    <span class="keyword">int</span> T;    <span class="keyword">int</span> n, k;    <span class="keyword">int</span> a[MAX], b[MAX];    <span class="keyword">int</span> cnt;    <span class="keyword">int</span> i, j;    <span class="keyword">int</span> x0, x1, x2, x3, x4, x5, x6, x7;    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);    <span class="keyword">while</span> (T--) {        cnt = <span class="number">0</span>;        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);        <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; k;i++)            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);        <span class="keyword">for</span> (i = k;i &lt; MAX;i++)            a[i] = b[i] = <span class="number">0</span>;        <span class="keyword">for</span> (x0 = <span class="number">0</span>;x0 &lt;= b[<span class="number">0</span>];x0++)            <span class="keyword">for</span>(x1 = <span class="number">0</span>;x1 &lt;= b[<span class="number">1</span>];x1++)                <span class="keyword">for</span> (x2 = <span class="number">0</span>;x2 &lt;= b[<span class="number">2</span>];x2++)                    <span class="keyword">for</span> (x3 = <span class="number">0</span>;x3 &lt;= b[<span class="number">3</span>];x3++)                        <span class="keyword">for</span> (x4 = <span class="number">0</span>;x4 &lt;= b[<span class="number">4</span>];x4++)                            <span class="keyword">for</span> (x5 = <span class="number">0</span>;x5 &lt;= b[<span class="number">5</span>];x5++)                                <span class="keyword">for</span> (x6 = <span class="number">0</span>;x6 &lt;= b[<span class="number">6</span>];x6++)                                    <span class="keyword">for</span> (x7 = <span class="number">0</span>;x7 &lt;= b[<span class="number">7</span>];x7++) {                                        <span class="keyword">if</span> (x0*a[<span class="number">0</span>]+x1*a[<span class="number">1</span>]+x2*a[<span class="number">2</span>]+x3*a[<span class="number">3</span>]+x4*a[<span class="number">4</span>]+x5*a[<span class="number">5</span>]+x6*a[<span class="number">6</span>]+x7*a[<span class="number">7</span>] == n)                                            cnt++;                                    }        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);    }    <span class="keyword">return</span> <span class="number">0</span>;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;Statistics the number of conbination that can achi
      
    
    </summary>
    
      <category term="Combinatorial Mathematics" scheme="http://yoursite.com/categories/Combinatorial-Mathematics/"/>
    
    
      <category term="Generating" scheme="http://yoursite.com/tags/Generating/"/>
    
  </entry>
  
  <entry>
    <title>Generating Function</title>
    <link href="http://yoursite.com/2016/05/15/Generating-Function/"/>
    <id>http://yoursite.com/2016/05/15/Generating-Function/</id>
    <published>2016-05-15T13:59:12.000Z</published>
    <updated>2017-09-22T04:44:50.554Z</updated>
    
    <content type="html"><![CDATA[<p>A generating function describes an infinite sequence of numbers (An) by treating them as the coefficients of a series expansion.For example, the generating function of sequence {0，1，2，3，4，5…n} is g(x)=0+x+2x^2+3x^3+4x^4+…+nx^n.</p><h2 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h2><p>Condition：There are four weights weigh 1g， 2g， 3g， 4g.<br>Question：How many weight can you weigh？How many methods to combine each weight？</p><p>We use 1+x represents one 1g weights.The same applies to 2g， 3g， 4g weights.And we use<center>(1+x)(1+x^2)(1+x^3)(1+x^4)</center>to express all conditions.</p><p>Expanding the formula, we can get a polynomial：<center>1+x+x^2+2x^3+2x^4+2x^5+2x^6+2x^7+x^8+x^9+x^10</center></p><p>The power of each monomial represents the weight we can weigh and the coefficient represents the number of methods to each weight.In this case, we can weigh from 0g to 10g, as the power range from 0 to 10, and there are 2 methods to weigh 5g, as the coefficient of x^5 is 2.</p><h2 id="Implements"><a href="#Implements" class="headerlink" title="Implements"></a>Implements</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Core Code</span></div><div class="line"></div><div class="line">menset(c1, <span class="number">0</span>, <span class="keyword">sizeof</span>(c1));</div><div class="line">menset(c2, <span class="number">0</span>, <span class="keyword">sizeof</span>(c2));</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt;= weight[<span class="number">0</span>]*num[<span class="number">0</span>] &amp;&amp; i &lt;= n;i+=weight[<span class="number">0</span>])</div><div class="line">c1[i] = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="comment">// n monomials multiplication</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;i &lt; LenofSeq;i++) &#123;</div><div class="line"><span class="comment">// coefficients of polynomial</span></div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= POWER;j++)</div><div class="line"><span class="comment">// and coefficient of current monomial</span></div><div class="line"><span class="keyword">for</span> (k = <span class="number">0</span>;k &lt;= weight[i]*num[i] &amp;&amp; k+j &lt;= POWER;k+=weight[i])</div><div class="line">c2[k+j] += c1[j];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt;= POWER;j++) &#123;</div><div class="line">c1[j] = c2[j];</div><div class="line">c2[j] = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p>Assume two sequences {Ak}, {Bk}, the corresponding generating function are A(x), B(x)</p><p><strong>Property One：</strong><br>A(x)=B(x) if and only if Ai=Bi， i=0，1，2，…<br>Note A(x)=ΣAix^i as sequence {Ak}’s generating function<br>Note B(x)=ΣBix^i as sequence {Bk}’s generating function</p><p><strong>Property Two：</strong><br>if A(x)+B(x) = C(X)<br>then Ci=Ai+Bi， i=0，1，2，…</p><p><strong>Property Three：</strong><br>if Bk=0 when k<l and="" bk="A(k-1)" when="" k="">=l<br>then B(x) = x^lA(X)</l></p><p><strong>Property Four：</strong><br>if Bk = Ak+1<br>then B(x)=[A(x)-ΣAkX^k]/x^l， Σ：k=0~l-1</p><p><strong>Property Five：</strong><br>if Bk=ΣAi， Σ：i=0~k<br>then B(x)=A(x)/(1-x)</p><p><strong>Property Six：</strong><br>if ΣAk is convergent，Σ：k=0~∞<br>then B(x)=(A(1)-xA(x))/(1-x) </p><p><strong>Property Seven：</strong><br>if Bk=kAk<br>then B(x)=xA(x)</p><p><strong>Property Eight：</strong><br>if Bk=Ak/(1+k)<br>then B(x)=1/x (∫A(x）dx)， ∫：0~x</p><p><strong>Property Nine：</strong><br>if Ck=ΣAiB(k-i)， Σ：i=0~k<br>then C(x)=A(x)B(x)</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a><a href="https://en.wikipedia.org/wiki/Generating_function" target="_blank" rel="external">https://en.wikipedia.org/wiki/Generating_function</a></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A generating function describes an infinite sequence of numbers (An) by treating them as the coefficients of a series expansion.For examp
      
    
    </summary>
    
      <category term="Combinatorial Mathematics" scheme="http://yoursite.com/categories/Combinatorial-Mathematics/"/>
    
    
      <category term="Generating" scheme="http://yoursite.com/tags/Generating/"/>
    
  </entry>
  
  <entry>
    <title>Maximum Independent Set</title>
    <link href="http://yoursite.com/2016/05/07/Maximum-Independent-Set/"/>
    <id>http://yoursite.com/2016/05/07/Maximum-Independent-Set/</id>
    <published>2016-05-07T11:51:01.000Z</published>
    <updated>2017-09-22T04:44:49.148Z</updated>
    
    <content type="html"><![CDATA[<p>This case is an implements of Hungarian Algorithm.The module of the problem is maximum independent number = vertexs - maximum matching.</p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>The second year of the university somebody started a study on the romantic relations between the students. The relation “romantically involved” is defined between one girl and one boy. For the study reasons it is necessary to find out the maximum set satisfying the condition: there are no two students in the set who have been “romantically involved”. The result of the program is the number of students in such a set.</p><p>The input contains several data sets in text format. Each data set represents one set of subjects of the study, with the following description:</p><p>the number of students<br>the description of each student, in the following format<br>student_identifier:(number_of_romantic_relations) student_identifier1 student_identifier2 student_identifier3 …<br>or<br>student_identifier:(0)</p><p>The student_identifier is an integer number between 0 and n-1, for n subjects.<br>For each given data set, the program should write to standard output a line containing the result.</p><h2 id="Implements"><a href="#Implements" class="headerlink" title="Implements"></a>Implements</h2><p>Attention：The bond is bidirectional and the maximum matching number = 1/2 relations.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Title：Hungarian Algorithm</span></div><div class="line"><span class="comment">// Author：Call偶围城</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1005</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> N;</div><div class="line"><span class="keyword">int</span> stu[MAX];</div><div class="line"><span class="keyword">int</span> bond[MAX][MAX];</div><div class="line"><span class="keyword">int</span> matching[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> stuNo)</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> i;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++) &#123;</div><div class="line"><span class="keyword">if</span> (bond[stuNo][i] == <span class="number">1</span> &amp;&amp; matching[i] == <span class="number">-1</span>)&#123;</div><div class="line">matching[i] = <span class="number">1</span>;</div><div class="line"><span class="keyword">if</span> (stu[i] == <span class="number">-1</span> || find(stu[i]) == <span class="number">1</span>) &#123;</div><div class="line">stu[i] = stuNo;</div><div class="line"><span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> cnt;</div><div class="line"><span class="keyword">int</span> i, j, k, n;</div><div class="line"></div><div class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N) != EOF) &#123;</div><div class="line">cnt = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; MAX;i++) &#123;</div><div class="line">stu[i] = <span class="number">-1</span>;</div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt; MAX;j++)</div><div class="line">bond[i][j] = <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++) &#123;</div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%d: (%d)"</span>, &amp;j, &amp;n);</div><div class="line"><span class="keyword">while</span> (n--) &#123;</div><div class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</div><div class="line">bond[j][k] = <span class="number">1</span>;</div><div class="line">bond[k][j] = <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt; N;j++)</div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++) &#123;</div><div class="line"><span class="keyword">for</span> (j = <span class="number">0</span>;j &lt; N;j++) &#123;</div><div class="line">matching[j] = <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (find(i) == <span class="number">1</span>) &#123;</div><div class="line">cnt++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, N-cnt/<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a>Samples</h2><p><strong>Inputs：</strong><br>7<br>0: (3) 4 5 6<br>1: (2) 4 6<br>2: (0)<br>3: (0)<br>4: (2) 0 1<br>5: (1) 0<br>6: (2) 0 1<br>3<br>0: (2) 1 2<br>1: (1) 0<br>2: (1) 0</p><p><strong>Outputs：</strong><br>5<br>2</p><h2 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h2><p><a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1068" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1068</a></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This case is an implements of Hungarian Algorithm.The module of the problem is maximum independent number = vertexs - maximum matching.&lt;/
      
    
    </summary>
    
      <category term="Graph Theory" scheme="http://yoursite.com/categories/Graph-Theory/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Graph-Theory/Algorithm/"/>
    
    
      <category term="Bipartite Graph" scheme="http://yoursite.com/tags/Bipartite-Graph/"/>
    
      <category term="Hungarian Algorithm" scheme="http://yoursite.com/tags/Hungarian-Algorithm/"/>
    
      <category term="Maximum Independent Set" scheme="http://yoursite.com/tags/Maximum-Independent-Set/"/>
    
  </entry>
  
  <entry>
    <title>Properties of Bipartite Graph</title>
    <link href="http://yoursite.com/2016/05/07/Hungarian-Algorithm/"/>
    <id>http://yoursite.com/2016/05/07/Hungarian-Algorithm/</id>
    <published>2016-05-07T08:28:33.000Z</published>
    <updated>2017-09-22T04:44:50.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Basic-Knowledge"><a href="#Basic-Knowledge" class="headerlink" title="Basic Knowledge"></a>Basic Knowledge</h2><h3 id="Vertex-Covering"><a href="#Vertex-Covering" class="headerlink" title="Vertex Covering"></a>Vertex Covering</h3><p><strong>Vertex Covering：</strong><br>A vertex set and every edge has more one terminal in the set.<br><strong>Minimal Vertex Covering：</strong><br>A vertex covering and its any proper subset isn’t a vertex covering.<br><strong>Minimum Vertex Covering：</strong><br>A vertex covering who has the minimum vertex.<br><strong>Vertex Covering Number：</strong><br>The number of vertexs in the minimum vertex covering.</p><h3 id="Edge-Covering"><a href="#Edge-Covering" class="headerlink" title="Edge Covering"></a>Edge Covering</h3><p><strong>Edge Covering：</strong><br>An edge set and every vertex is adjacent to the edge in the set.<br><strong>Minimal Edge Covering：</strong><br>An edge covering and its any proper subset isn’t a edge covering.<br><strong>Minimum Edge Covering：</strong><br>An edge coving who has the minimum edge.<br><strong>Edge Covering Number：</strong><br>The number of edges in the minimun edge coving.</p><h3 id="Independent-Set"><a href="#Independent-Set" class="headerlink" title="Independent Set"></a>Independent Set</h3><p><strong>Independent Set：</strong><br>A vertex set and every vertex in the set isn’t adjacent to any other vertex in the set.<br><strong>Maximal Independent Set：</strong><br>An independent set and the set is no longer an independent set when adding any vertex to it.<br><strong>Maximum Independent Set：</strong><br>An independent set who has the maximum vertex.<br><strong>Vertex Independent Set：</strong><br>The number of vertexs in the maximum independent set.</p><p><strong>Independent set can also be define as a vertex set of a derived subgraph who’s a zero diagram.</strong></p><h3 id="Clique"><a href="#Clique" class="headerlink" title="Clique"></a>Clique</h3><p><strong>Clique：</strong><br>A vertex set and every vertex in the set is adjacent to any other vertex in the set.<br><strong>Maximal Clique：</strong><br>A clique and the set is no longer a clique when adding any vertex to it.<br><strong>Maximum Clique：</strong><br>A clique who has the maximum vertex.<br><strong>Clique Number：</strong><br>The number of vertexs in the maximum independent set.</p><p><strong>Clique can also be define as a vertex set of a derived subgraph who’s a complete graph.</strong></p><h3 id="Edge-Independent-Set"><a href="#Edge-Independent-Set" class="headerlink" title="Edge Independent Set"></a>Edge Independent Set</h3><p><strong>Edge Independent Set：</strong><br>An edge set and every edge in the set isn’t adjacent to any other edge in the set.<br><strong>Maximal Edge Independent Set：</strong><br>An edge independent set and the set is no longer an edge independent set when adding any edge to it.<br><strong>Maximum Edge Independent Set：</strong><br>An edge independent who has the maximum edge.<br><strong>Edge Independent Set Covering Number：</strong><br>The number of edges in the maximum edge independent set.</p><p><strong>Edge independent set also called matching， corresponding concepts have maximal matching， maximum matching， matching number.</strong></p><h3 id="Dominating-Set"><a href="#Dominating-Set" class="headerlink" title="Dominating Set"></a>Dominating Set</h3><p><strong>Dominating Set：</strong><br>A vertex set and any vertex isn’t in the set has more one adjacent vertex in the set.<br><strong>Minimal Dominating Set：</strong><br>A dominating set and it’s any proper subset isn’t a dominating set.<br><strong>Minimum Dominating Set：</strong><br>A dominating set who has the minimum vertex.<br><strong>Dominating Number：</strong><br>The number of vertexs in the minimum dominating set.</p><h3 id="Edge-Dominating-Set"><a href="#Edge-Dominating-Set" class="headerlink" title="Edge Dominating Set"></a>Edge Dominating Set</h3><p><strong>Edge Dominating Set：</strong><br>An egde set and any edge isn’t in the set has more one adjacent edge in the set.<br><strong>Minimal Edge Dominating Set：</strong><br>An edge dominating set and it’s any proper subset isn’t an edge dominating set.<br><strong>Minimum Edge Dominating Set：</strong><br>An edge dominating set who has the minimum edge.<br><strong>Edge Dominating Number：</strong><br>The number of edges in the minimum edge dominating set.</p><h3 id="Path-Covering"><a href="#Path-Covering" class="headerlink" title="Path Covering"></a>Path Covering</h3><p>Using minimum disjoint edges to cover all the vertexs in the graph.<br>path covering number = vertexs - edges in path covering</p><h2 id="Bipartite-Graph"><a href="#Bipartite-Graph" class="headerlink" title="Bipartite Graph"></a>Bipartite Graph</h2><p>A bipartite graph is a graph whose vertices can be divided into two disjoint sets U and V such that every edge connects a vertex in U to one in V. </p><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p>In a bipartite graph：</p><p><strong>Property One：</strong><br>minimum vertex covering = maximum matching</p><p><strong>Property Two：</strong><br>minimum path coverage of DAG = vertexs - maximum matching</p><p><strong>Property Three：</strong><br>maximum independent set = vertexs - maximum matching</p><p><strong>Property Four：</strong><br>maximum matching = matching vertexs in left set + unmatching vertexs in right set</p><p><strong>Property Five：</strong><br>minimum edge covering = maximum independent set</p><h2 id="Hungarian-Algorithm"><a href="#Hungarian-Algorithm" class="headerlink" title="Hungarian Algorithm"></a>Hungarian Algorithm</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">// Module</div><div class="line"></div><div class="line">int find(int x) &#123;</div><div class="line">int i;</div><div class="line">for (i = 1;i &lt;= m;i++) &#123;</div><div class="line">if (bond[x][i] == 1 &amp;&amp; march[i] == -1) &#123;</div><div class="line">march[i] = 1;</div><div class="line">if (vis[i] == -1 || find(vis[i]) == 1) &#123;</div><div class="line">vis[i] = x;</div><div class="line">return 1;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">...</div><div class="line">...</div><div class="line"></div><div class="line">memset(vis, -1, sizeof(vis));</div><div class="line">// Init bond</div><div class="line"></div><div class="line">for (i = 1;i &lt;= n;i++) &#123;</div><div class="line">for (j = 0;j &lt; MAX;j++)</div><div class="line">march[j] = -1;</div><div class="line"></div><div class="line">if (find(i) == 1) &#123;</div><div class="line">cnt++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Basic-Knowledge&quot;&gt;&lt;a href=&quot;#Basic-Knowledge&quot; class=&quot;headerlink&quot; title=&quot;Basic Knowledge&quot;&gt;&lt;/a&gt;Basic Knowledge&lt;/h2&gt;&lt;h3 id=&quot;Vertex-Coveri
      
    
    </summary>
    
      <category term="Graph Theory" scheme="http://yoursite.com/categories/Graph-Theory/"/>
    
      <category term="Hungarian Algorithm" scheme="http://yoursite.com/categories/Graph-Theory/Hungarian-Algorithm/"/>
    
    
      <category term="Bipartite Graph" scheme="http://yoursite.com/tags/Bipartite-Graph/"/>
    
      <category term="Maximum Matching" scheme="http://yoursite.com/tags/Maximum-Matching/"/>
    
      <category term="Hungarian Algorithm" scheme="http://yoursite.com/tags/Hungarian-Algorithm/"/>
    
  </entry>
  
</feed>
